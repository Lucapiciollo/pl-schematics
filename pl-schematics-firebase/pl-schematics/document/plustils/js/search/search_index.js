var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AlertComponent.html",[0,1.112,1,1.356]],["body/components/AlertComponent.html",[0,1.214,1,2.196,2,2.42,3,0.297,4,1.64,5,2.053,6,0.246,7,0.406,8,0.297,9,0.35,10,3.286,11,2.053,12,2.053,13,2.053,14,3.374,15,3.244,16,2.335,17,2.053,18,3.286,19,2.053,20,3.286,21,0.246,22,1.959,23,3.592,24,1.431,25,4.351,26,4.351,27,0.699,28,4.879,29,3.047,30,1.199,31,1.64,32,1.214,33,2.053,34,3.286,35,2.335,36,3.592,37,0.538,38,0.038,39,1.085,40,0.882,41,3.286,42,2.713,43,3.286,44,2.713,45,1.64,46,2.196,47,3.092,48,1.607,49,1.607,50,2.713,51,3.286,52,3.286,53,2.713,54,2.713,55,2.335,56,1.214,57,3.286,58,1.479,59,2.171,60,2.053,61,3.244,62,2.053,63,3.286,64,2.713,65,3.286,66,2.335,67,1.085,68,2.053,69,1.339,70,2.053,71,1.479,72,2.053,73,1.479,74,1.827,75,1.64,76,2.053,77,2.053,78,0.02,79,0.027,80,0.02]],["title/injectables/AlertService.html",[81,1.112,82,2.14]],["body/injectables/AlertService.html",[3,0.363,6,0.301,7,0.498,8,0.363,9,0.429,16,2.86,21,0.301,24,1.365,27,0.796,30,1.109,31,2.009,32,1.487,37,0.498,38,0.035,39,1.004,40,0.895,67,1.235,78,0.025,79,0.031,80,0.025,82,2.86,83,1.349,84,4.026,85,4.954,86,4.026,87,5.367,88,4.954,89,4.954,90,3.979,91,1.506,92,1.506,93,4.026,94,3.52,95,4.026,96,1.487,97,3.323,98,2.515,99,4.026,100,4.026,101,4.026,102,3.323,103,2.009,104,2.86,105,4.026]],["title/components/AppComponent.html",[0,1.112,69,1.227]],["body/components/AppComponent.html",[0,0.92,1,1.121,2,1.997,3,0.225,4,1.242,5,1.555,6,0.268,11,1.555,12,1.555,13,1.555,14,3.053,15,2.88,17,1.555,19,1.555,21,0.186,22,1.616,24,1.481,27,0.577,29,2.631,30,0.686,37,0.63,38,0.038,39,1.149,40,0.949,42,3.477,46,1.616,48,1.703,49,1.703,58,1.121,59,1.792,60,1.555,61,2.88,62,1.555,67,1.218,68,1.555,69,1.716,70,1.555,71,1.121,72,1.555,73,1.121,74,1.384,75,1.242,76,1.555,77,1.555,78,0.015,79,0.022,80,0.015,91,1.281,92,1.281,106,2.49,107,2.49,108,2.49,109,2.49,110,2.993,111,3.591,112,3.591,113,2.342,114,3.591,115,3.279,116,4.212,117,4.212,118,3.591,119,3.591,120,4.212,121,4.212,122,2.49,123,2.551,124,3.591,125,2.551,126,3.591,127,3.591,128,2.49,129,2.49,130,3.591,131,2.49,132,2.49,133,2.243,134,1.121,135,2.964,136,1.555,137,2.49,138,1.384,139,3.591,140,3.591,141,3.591,142,5.093,143,2.832,144,5.093,145,5.093,146,2.49,147,1.769,148,2.055,149,1.769,150,2.055,151,2.49,152,2.49,153,3.591,154,3.591,155,2.49,156,2.49,157,0.834,158,2.055,159,2.49,160,2.49,161,2.49,162,2.49,163,2.49,164,2.49,165,2.49,166,2.49,167,2.49,168,2.49]],["title/modules/AppModule.html",[169,1.675,170,1.881]],["body/modules/AppModule.html",[3,0.367,6,0.303,38,0.036,58,1.828,69,2.463,71,2.594,78,0.025,79,0.031,80,0.025,169,2.259,170,3.8,171,2.259,172,2.259,173,3.539,174,2.77,175,2.886,176,2.886,177,3.353,178,3.353,179,3.353,180,3.353,181,3.123,182,3.539,183,2.886,184,2.886,185,4.062,186,3.353,187,4.062]],["title/classes/AppPage.html",[188,1.881,189,2.486]],["body/classes/AppPage.html",[3,0.411,6,0.341,21,0.341,27,0.857,37,0.66,38,0.036,78,0.028,79,0.033,80,0.028,189,3.764,190,2.848,191,4.559,192,5.661,193,5.661]],["title/interfaces/CacheEntry.html",[194,2.486,195,2.486]],["body/interfaces/CacheEntry.html",[3,0.391,6,0.324,7,0.535,8,0.391,9,0.461,21,0.324,22,2.331,38,0.036,40,1.001,78,0.027,79,0.032,80,0.027,133,3.234,157,1.735,195,3.574,196,3.076,197,1.599,198,2.705,199,3.076,200,5.539,201,4.573,202,2.493,203,4.274]],["title/components/ExampleComponent.html",[0,1.112,71,1.356]],["body/components/ExampleComponent.html",[0,1.42,1,1.731,2,2.678,3,0.347,4,1.919,5,2.402,6,0.287,11,2.402,12,2.402,13,2.402,14,3.544,15,3.442,17,2.402,19,2.402,21,0.287,27,0.773,29,3.284,37,0.595,38,0.037,39,1.2,46,2.167,58,1.731,59,2.403,60,2.402,61,3.442,62,2.402,66,2.733,67,1.2,68,2.402,69,1.567,70,2.402,71,2.366,72,2.402,73,1.731,74,2.139,75,1.919,76,2.402,77,2.402,78,0.024,79,0.03,80,0.024,204,3.846,205,1.42,206,3.846,207,3.846,208,5.257,209,3.846,210,3.846]],["title/injectables/PLWorkerService.html",[81,1.112,211,2.486]],["body/injectables/PLWorkerService.html",[3,0.288,6,0.239,7,0.395,8,0.288,9,0.34,21,0.239,24,1.415,27,0.686,32,1.18,35,2.27,37,0.528,38,0.037,39,1.064,40,0.869,45,2.131,48,1.18,49,1.18,56,1.18,67,1.064,78,0.02,79,0.026,80,0.02,83,1.071,91,1.463,92,1.298,94,3.034,96,1.18,103,2.4,110,3.648,113,1.776,143,1.776,157,1.721,197,1.18,202,1.438,205,1.18,211,2.637,212,3.195,213,4.27,214,4.27,215,3.195,216,2.637,217,4.27,218,4.27,219,2.27,220,4.27,221,3.195,222,1.594,223,4.27,224,2.855,225,2.4,226,2.637,227,2.675,228,4.27,229,3.195,230,2.375,231,4.27,232,4.27,233,2.27,234,3.195,235,2.27,236,1.995,237,2.667,238,3.195,239,2.637,240,3.195,241,1.776,242,2.637,243,3.034,244,1.995,245,1.776,246,3.034,247,2.667,248,1.995,249,2.667,250,2.637,251,2.637,252,3.195,253,1.995,254,2.27,255,2.27,256,2.637,257,2.637,258,3.195,259,3.195,260,2.27,261,2.637,262,3.525,263,2.637,264,3.195,265,2.637,266,3.195]],["title/injectables/PlAmbientModeLoaderService.html",[81,1.112,267,1.881]],["body/injectables/PlAmbientModeLoaderService.html",[3,0.398,6,0.33,7,0.546,8,0.398,9,0.47,21,0.33,24,1.443,27,0.841,37,0.647,38,0.036,78,0.027,79,0.032,80,0.027,83,1.479,134,1.986,197,1.63,205,1.63,267,2.757,268,3.643,269,3.643,270,5.584,271,5.584,272,2.757]],["title/injectables/PlCacheMapService.html",[81,1.112,273,2.486]],["body/injectables/PlCacheMapService.html",[3,0.369,6,0.305,7,0.505,8,0.369,9,0.435,21,0.305,24,1.551,27,0.803,37,0.618,38,0.037,39,1.018,40,0.903,47,2.903,67,1.246,78,0.025,79,0.031,80,0.025,83,1.369,91,1.52,92,1.52,197,1.509,198,2.552,199,2.903,203,4.459,205,1.509,222,2.039,273,3.373,274,4.086,275,4.086,276,4.127,277,4.086,278,4.646,279,4.999,280,4.086,281,4.999]],["title/modules/PlCoreModule.html",[169,1.675,181,1.675]],["body/modules/PlCoreModule.html",[1,2.523,3,0.333,6,0.276,7,0.456,8,0.424,9,0.5,27,0.593,31,1.842,32,1.733,37,0.456,38,0.037,56,1.733,58,1.661,73,2.523,78,0.023,79,0.029,80,0.023,96,1.363,169,2.053,171,2.053,172,2.053,173,3.334,174,2.053,175,3.334,176,2.623,181,3.353,182,3.334,183,2.623,184,2.623,186,3.047,235,2.623,249,2.306,267,3.391,282,3.047,283,3.047,284,3.047,285,3.391,286,2.623,287,3.691,288,3.047,289,4.693,290,3.691,291,3.691,292,3.047,293,3.691,294,2.306,295,3.691,296,3.047,297,2.623,298,3.691,299,1.842,300,3.047,301,2.053,302,3.691]],["title/classes/PlCoreUtils.html",[188,1.881,303,2.14]],["body/classes/PlCoreUtils.html",[3,0.34,6,0.281,7,0.465,8,0.429,9,0.506,21,0.281,22,2.138,27,0.763,30,1.309,32,1.389,37,0.465,38,0.037,39,1.184,40,0.68,48,1.389,49,1.389,56,2.019,75,1.877,78,0.023,79,0.029,80,0.023,96,1.389,98,3.251,138,2.092,190,2.35,222,1.877,245,2.092,248,2.966,286,2.673,288,4.512,299,1.877,303,2.673,304,3.105,305,3.105,306,3.105,307,2.673,308,3.105,309,3.762,310,3.105,311,3.762,312,4.749,313,3.92,314,4.749,315,5.204,316,2.673,317,3.762,318,3.105,319,3.762,320,3.105,321,3.105,322,3.762,323,3.762,324,3.762,325,3.762,326,3.762,327,3.762,328,2.35,329,3.762]],["title/injectables/PlGraphicService.html",[81,1.112,330,2.486]],["body/injectables/PlGraphicService.html",[3,0.219,4,2.413,6,0.263,7,0.3,8,0.219,9,0.258,21,0.181,24,1.559,27,0.566,30,0.668,31,1.21,32,1.301,33,3.252,37,0.624,38,0.037,39,0.878,40,0.941,45,1.21,46,1.585,55,1.722,56,1.682,59,1.21,67,1.298,78,0.015,79,0.022,80,0.015,83,0.812,91,1.583,92,1.583,96,1.532,98,1.514,103,2.714,115,2.591,134,2.177,157,1.526,197,0.895,202,1.867,205,0.895,219,1.722,222,2.272,224,1.959,225,1.21,227,2.806,230,1.959,237,2.844,241,2.69,244,1.514,245,1.348,247,1.514,248,1.514,253,1.514,294,1.514,299,1.21,328,2.591,330,2.001,331,2.424,332,3.522,333,3.522,334,3.424,335,3.522,336,3.522,337,3.522,338,2.424,339,2.001,340,4.619,341,1.514,342,1.722,343,3.424,344,2.001,345,4.489,346,2.001,347,2.001,348,2.907,349,2.001,350,2.001,351,1.722,352,2.001,353,2.001,354,2.001,355,2.502,356,2.001,357,2.001,358,2.907,359,2.907,360,3.235,361,2.907,362,2.001,363,3.759,364,2.502,365,2.001,366,2.001,367,2.001,368,2.001,369,2.001,370,2.001,371,2.001,372,2.001,373,2.001,374,2.001,375,2.001,376,2.001,377,2.907,378,2.502,379,2.001,380,2.001,381,2.001,382,1.722,383,2.001,384,2.001,385,2.001,386,2.001,387,2.001,388,1.722,389,2.001,390,2.001,391,2.001,392,2.001,393,2.001,394,2.001,395,2.001,396,2.907,397,2.001,398,2.001,399,2.001,400,2.001,401,2.001,402,2.001,403,1.722,404,2.001,405,2.001]],["title/interceptors/PlHttpInterceptorMockService.html",[285,1.881,406,2.14]],["body/interceptors/PlHttpInterceptorMockService.html",[3,0.378,6,0.313,7,0.517,8,0.378,9,0.446,21,0.313,27,0.815,30,1.153,37,0.517,38,0.036,40,0.917,67,1.264,78,0.026,79,0.031,80,0.026,91,1.542,92,1.542,134,1.884,157,1.902,278,4.188,285,2.614,406,2.974,407,4.185,408,3.455,409,3.455,410,5.073,411,4.185,412,5.073,413,4.185,414,4.185,415,5.073,416,5.073,417,3.455]],["title/classes/PlHttpRequest.html",[188,1.881,418,1.881]],["body/classes/PlHttpRequest.html",[3,0.256,6,0.212,7,0.351,8,0.256,9,0.302,21,0.212,30,0.782,32,1.455,33,3.054,37,0.635,38,0.036,39,1.28,40,1.004,45,1.417,56,1.048,67,1.325,78,0.017,79,0.024,80,0.017,91,1.616,92,1.616,96,1.671,103,2.563,113,2.956,138,2.719,157,1.517,190,1.773,202,2.454,205,1.048,227,1.579,230,1.579,241,2.191,244,2.461,245,2.191,246,2.8,247,3.054,249,1.773,254,2.017,255,2.017,260,2.017,294,2.461,301,1.579,351,2.017,418,1.773,419,2.839,420,2.839,421,3.94,422,4.388,423,3.94,424,4.036,425,4.036,426,3.94,427,3.253,428,2.839,429,4.036,430,2.839,431,2.839,432,4.036,433,2.343,434,2.343,435,2.8,436,2.839,437,2.343,438,3.253,439,2.343,440,3.253,441,3.253,442,2.839,443,2.839,444,2.839,445,2.343,446,3.736,447,2.839,448,2.343,449,3.253,450,3.736,451,2.839,452,2.839,453,2.839,454,2.8,455,2.839,456,2.839,457,3.94,458,2.017,459,2.343,460,2.343,461,2.839,462,2.839,463,2.839,464,2.839,465,2.839,466,2.343,467,2.839,468,2.343,469,2.839,470,2.839,471,2.017]],["title/injectables/PlHttpService.html",[81,1.112,115,1.881]],["body/injectables/PlHttpService.html",[3,0.199,6,0.365,7,0.273,8,0.199,9,0.235,21,0.165,27,0.528,30,0.608,31,1.64,37,0.642,38,0.038,39,1.216,40,0.959,45,1.101,48,0.815,49,0.815,56,1.607,67,1.323,78,0.014,79,0.02,80,0.014,83,0.739,91,1.614,92,1.614,96,1.451,115,1.378,134,2.196,157,1.95,197,0.815,202,1.479,205,0.815,219,3.306,222,1.101,224,2.588,225,1.101,227,1.828,233,1.568,237,1.378,241,1.227,243,4.208,276,2.713,297,3.944,299,1.64,301,1.227,307,1.568,328,3.375,341,1.378,342,1.568,355,2.335,364,1.568,378,1.568,382,1.568,388,3.092,418,3.375,435,2.335,458,2.335,472,2.206,473,2.713,474,3.287,475,3.287,476,3.287,477,2.206,478,3.287,479,2.206,480,5.403,481,5.403,482,4.583,483,5.551,484,5.551,485,4.879,486,2.206,487,3.287,488,4.352,489,2.206,490,2.206,491,1.821,492,2.713,493,2.206,494,1.821,495,1.821,496,2.206,497,2.206,498,1.821,499,1.821,500,1.821,501,1.821,502,1.821,503,2.206,504,2.206,505,2.053,506,2.206,507,2.206,508,2.206,509,2.206]],["title/injectables/PlNetworkService.html",[81,1.112,510,2.486]],["body/injectables/PlNetworkService.html",[3,0.405,6,0.335,7,0.554,8,0.405,9,0.478,21,0.335,24,1.457,27,0.849,30,1.457,37,0.554,38,0.035,78,0.028,79,0.033,80,0.028,83,1.503,197,1.656,205,1.656,225,2.238,510,3.702,511,4.485,512,5.622]],["title/components/PlProgressComponent.html",[0,1.112,73,1.356]],["body/components/PlProgressComponent.html",[0,1.153,1,1.405,2,2.338,3,0.282,4,1.558,5,1.95,6,0.233,7,0.386,8,0.282,9,0.333,11,1.95,12,1.95,13,1.95,14,3.317,15,2.97,17,1.95,19,1.95,21,0.233,22,1.893,24,1.566,27,0.675,29,2.97,30,0.86,37,0.629,38,0.038,39,1.185,40,0.859,46,1.893,48,1.756,49,1.756,58,1.405,59,2.098,60,1.95,61,3.178,62,1.95,67,1.268,68,1.95,69,1.272,70,1.95,71,1.405,72,1.95,73,2.14,74,2.338,75,2.098,76,1.95,77,1.95,78,0.019,79,0.026,80,0.019,90,3.972,91,1.279,92,1.279,133,1.95,143,1.736,202,1.405,303,3.378,482,3.471,505,1.95,513,2.577,514,3.122,515,3.471,516,3.122,517,3.122,518,4.205,519,4.205,520,4.755,521,4.755,522,3.122,523,4.205,524,3.122,525,3.122,526,3.122,527,2.218,528,3.122,529,3.122,530,3.122,531,3.122,532,3.122,533,3.122,534,3.122,535,3.122]],["title/injectables/PlProgressService.html",[81,1.112,125,2.14]],["body/injectables/PlProgressService.html",[3,0.388,6,0.322,7,0.532,8,0.388,9,0.458,21,0.322,24,1.421,27,0.828,30,1.186,37,0.532,38,0.036,40,0.777,67,1.286,78,0.026,79,0.032,80,0.026,83,1.442,90,3.925,91,1.568,92,1.568,125,3.057,243,3.057,513,3.552,536,4.303,537,5.158,538,4.303,539,4.303,540,4.303,541,4.303]],["title/injectables/PlUtilsService.html",[81,1.112,123,2.14]],["body/injectables/PlUtilsService.html",[3,0.342,6,0.283,7,0.469,8,0.342,9,0.404,21,0.283,22,2.149,24,1.589,27,0.767,30,1.315,37,0.59,38,0.038,39,0.945,48,1.401,49,1.401,66,2.695,78,0.023,79,0.029,80,0.023,83,1.271,123,2.695,134,1.707,136,2.369,147,3.895,197,1.401,205,1.401,216,3.131,224,2.109,225,1.893,527,2.695,542,3.793,543,4.774,544,5.224,545,5.224,546,4.312,547,3.793,548,3.793,549,4.774,550,4.774,551,3.793,552,5.224,553,3.793,554,3.793,555,3.793]],["title/dependencies.html",[172,2.013,556,2.518]],["body/dependencies.html",[8,0.33,23,3.015,38,0.039,46,1.644,78,0.022,79,0.029,80,0.022,172,2.031,174,2.592,272,2.911,498,3.015,557,3.652,558,5.878,559,3.652,560,3.652,561,3.652,562,3.652,563,4.661,564,3.652,565,3.652,566,3.652,567,3.652,568,3.652,569,3.652,570,3.652,571,3.652,572,3.652,573,3.652,574,3.652,575,3.652,576,3.652,577,3.652,578,3.652,579,3.652,580,3.652,581,3.652,582,3.652,583,3.652,584,3.652,585,3.652,586,3.652,587,3.652,588,3.652,589,3.652,590,4.661,591,3.652,592,3.652,593,3.652,594,3.652,595,3.652,596,3.652,597,4.661,598,3.652,599,3.652,600,3.652,601,3.652,602,3.652,603,3.652,604,3.652]],["title/miscellaneous/functions.html",[605,1.573,606,2.989]],["body/miscellaneous/functions.html",[7,0.541,8,0.395,9,0.466,21,0.248,37,0.67,38,0.038,40,0.791,56,1.225,67,1.415,78,0.02,79,0.027,80,0.02,91,1.726,92,1.726,96,1.225,103,1.656,157,1.816,222,2.185,230,1.845,236,2.072,253,2.072,254,2.357,341,2.072,403,2.357,505,2.072,605,2.072,606,2.739,607,4.379,608,3.318,609,4.379,610,5.676,611,4.379,612,4.379,613,4.379,614,3.615,615,4.902,616,4.379,617,3.318,618,3.318,619,3.318,620,3.318,621,3.318,622,3.318,623,3.318,624,4.379,625,4.379,626,4.046,627,4.379,628,3.318,629,3.318,630,3.318,631,3.318,632,3.318,633,2.739,634,3.318,635,3.318,636,3.318,637,4.902,638,3.318,639,3.318,640,2.739,641,3.318,642,3.318,643,2.739,644,2.739,645,3.318]],["title/index.html",[21,0.188,646,2.518,647,2.518]],["body/index.html",[0,0.193,4,1.509,6,0.226,8,0.087,9,0.056,16,1.196,21,0.039,22,0.236,24,0.679,31,1.93,32,1.94,33,3.215,35,3.068,36,0.432,38,0.038,39,0.614,44,0.432,45,2.24,46,0.436,47,1.587,48,0.193,49,0.193,50,0.432,53,1.39,54,0.432,55,0.688,56,2.12,59,0.261,64,0.8,69,0.55,74,0.291,75,0.674,78,0.003,79,0.006,80,0.003,82,0.688,94,0.372,96,1.94,97,1.115,98,2.922,102,0.8,103,2.053,104,0.688,110,0.372,113,1.767,133,0.605,134,1.109,135,0.8,136,1.889,138,1.588,143,0.751,147,0.372,149,0.372,157,0.895,158,0.432,174,0.539,188,1.052,198,1.889,201,0.432,202,1.818,224,0.291,225,0.261,226,0.432,227,2.435,230,1.681,233,1.587,235,1.404,236,0.844,237,1.889,239,1.844,241,2.401,242,0.8,244,0.605,245,0.539,246,0.96,247,0.844,248,1.889,249,1.395,250,0.8,251,0.8,253,2.471,255,0.372,256,1.39,257,1.115,260,0.372,261,0.432,262,0.8,263,0.8,265,1.844,272,1.539,292,0.432,294,1.984,296,2.496,297,0.372,299,2.155,301,0.936,305,0.432,306,1.115,307,2.749,308,1.631,310,1.631,313,0.8,318,1.631,320,0.432,321,0.8,328,1.395,334,0.432,339,0.432,340,1.844,341,2.522,342,0.96,343,1.115,344,0.432,345,2.622,346,1.39,347,0.8,348,1.115,349,1.631,350,1.39,351,1.897,352,0.432,353,1.39,354,0.432,355,0.96,356,0.432,357,0.432,358,0.8,359,1.39,360,1.75,361,0.8,362,0.432,363,1.115,364,1.196,365,0.432,366,0.432,367,0.432,368,0.432,369,0.8,370,1.631,371,0.432,372,0.8,373,0.432,374,1.115,375,0.432,376,0.8,377,0.8,378,0.688,379,2.622,380,0.432,381,0.8,382,1.404,383,1.115,384,0.432,385,0.8,386,0.432,387,0.432,388,1.404,389,0.432,390,0.8,391,1.115,392,0.432,393,0.432,394,0.432,395,0.432,396,0.8,397,0.432,398,1.631,399,0.8,400,0.8,401,1.115,402,0.432,403,1.404,404,0.432,405,0.432,417,0.8,418,2.226,422,0.432,424,0.432,425,1.115,427,1.115,432,0.8,433,1.844,434,3.116,435,0.372,437,0.432,438,3.333,439,1.115,440,2.622,441,2.942,445,1.115,446,2.844,448,1.115,449,0.432,450,1.844,454,2.029,458,2.257,459,0.8,460,0.432,466,0.432,468,0.432,471,2.148,473,0.432,491,1.844,492,0.432,494,1.844,495,0.8,499,1.39,500,2.204,501,0.8,502,0.432,505,1.052,515,0.432,527,0.372,546,1.39,614,0.432,626,0.8,633,0.432,640,0.8,643,0.432,644,0.432,648,0.524,649,0.524,650,1.351,651,0.969,652,0.524,653,0.524,654,0.524,655,1.684,656,0.524,657,0.524,658,0.524,659,0.524,660,0.969,661,0.524,662,0.524,663,0.524,664,0.969,665,0.969,666,0.524,667,0.524,668,0.524,669,0.524,670,0.969,671,0.524,672,0.524,673,0.524,674,0.969,675,0.524,676,0.524,677,0.524,678,0.524,679,0.524,680,1.684,681,0.524,682,1.684,683,0.524,684,0.524,685,0.524,686,0.524,687,0.969,688,0.524,689,1.351,690,0.524,691,0.524,692,1.351,693,1.351,694,0.524,695,0.524,696,0.969,697,0.969,698,0.524,699,0.524,700,0.524,701,2.234,702,0.969,703,1.351,704,0.524,705,0.524,706,0.524,707,0.969,708,1.351,709,0.524,710,0.524,711,0.969,712,0.524,713,0.524,714,0.524,715,3.317,716,0.524,717,0.524,718,1.351,719,0.524,720,0.969,721,0.524,722,0.524,723,0.524,724,3.177,725,0.524,726,1.351,727,0.524,728,0.969,729,0.969,730,0.524,731,0.524,732,1.351,733,0.969,734,0.524,735,0.969,736,0.524,737,0.524,738,0.524,739,0.524,740,0.524,741,0.524,742,0.524,743,0.524,744,0.524,745,0.524,746,1.351,747,0.969,748,0.524,749,0.524,750,0.524,751,0.524,752,0.524,753,0.524,754,0.969,755,0.969,756,0.524,757,0.524,758,0.524,759,0.524,760,0.524,761,0.524,762,0.524,763,0.524,764,0.969,765,0.969,766,0.969,767,0.524,768,0.524,769,0.524,770,0.524,771,4.255,772,0.969,773,1.351,774,0.524,775,1.351,776,0.524,777,0.524,778,1.351,779,2.464,780,1.351,781,1.684,782,3.869,783,3.673,784,1.684,785,0.969,786,0.969,787,1.684,788,0.524,789,0.524,790,0.524,791,0.969,792,1.351,793,1.351,794,1.976,795,1.351,796,0.969,797,0.969,798,0.524,799,0.524,800,1.976,801,0.969,802,0.524,803,1.976,804,0.524,805,0.524,806,0.524,807,0.524,808,0.969,809,1.684,810,0.969,811,0.969,812,1.351,813,1.844,814,1.351,815,1.351,816,0.969,817,1.684,818,0.524,819,0.969,820,1.351,821,0.524,822,0.524,823,0.524,824,0.524,825,0.524,826,0.524,827,0.524,828,0.524,829,0.524,830,0.969,831,0.969,832,0.524,833,0.524,834,0.524,835,0.524,836,0.524,837,0.524,838,1.684,839,0.524,840,0.969,841,0.969,842,1.684,843,3.673,844,0.524,845,1.684,846,2.234,847,0.969,848,0.524,849,0.524,850,0.524,851,1.351,852,0.524,853,1.684,854,0.524,855,0.969,856,1.684,857,0.524,858,0.524,859,0.969,860,0.524,861,0.969,862,0.524,863,0.524,864,0.969,865,0.524,866,0.524,867,0.524,868,0.524,869,0.524,870,0.524,871,1.351,872,0.524,873,0.524,874,0.524,875,0.524,876,0.524,877,0.524,878,0.524,879,0.969,880,0.524,881,0.524,882,0.524,883,0.524,884,0.969,885,0.969,886,0.524,887,2.67,888,0.8,889,2.67,890,0.969,891,0.8,892,0.969,893,0.524,894,1.684,895,0.524,896,0.524,897,1.684,898,0.524,899,0.524,900,0.524,901,0.524,902,0.524,903,0.524,904,0.524,905,0.524,906,0.524,907,0.524,908,0.524,909,1.976,910,0.969,911,0.524,912,0.524,913,0.524,914,0.524,915,0.524,916,0.969,917,0.524,918,0.969,919,1.976,920,1.976,921,0.969,922,0.969,923,0.524,924,0.524,925,1.684,926,0.524,927,0.524,928,0.969,929,0.969,930,0.969,931,0.524,932,0.524,933,1.351,934,0.524,935,0.969,936,0.524,937,0.524,938,0.524,939,0.969,940,0.969,941,0.524,942,0.524,943,0.524,944,0.969,945,0.524,946,0.524,947,0.524,948,0.524,949,0.524,950,0.524,951,0.969,952,0.524,953,0.524,954,0.524,955,0.524,956,0.524,957,0.524,958,3.317,959,0.969,960,0.969,961,1.351,962,0.969,963,1.684,964,0.969,965,0.524,966,0.969,967,0.524,968,0.969,969,0.969,970,0.969,971,0.969,972,0.524,973,0.524,974,0.524,975,0.524,976,0.524,977,0.524,978,0.969,979,0.969,980,0.524,981,0.524,982,0.524,983,0.524,984,0.969,985,0.524,986,0.524,987,0.524,988,0.524,989,0.524,990,0.524,991,0.524,992,0.524,993,0.524,994,0.524,995,0.524,996,0.524,997,0.524,998,0.524,999,0.969,1000,0.524,1001,0.524,1002,0.524,1003,1.351,1004,0.524,1005,0.969,1006,0.969,1007,0.524,1008,0.524,1009,1.684,1010,0.524,1011,0.524,1012,0.524,1013,0.524,1014,0.524,1015,0.524,1016,0.524,1017,0.969,1018,0.524,1019,0.524,1020,0.524,1021,0.524,1022,0.524,1023,0.524,1024,0.524,1025,0.524,1026,0.524,1027,0.524,1028,0.524,1029,0.524,1030,0.524,1031,1.684,1032,0.524,1033,0.524,1034,0.524,1035,0.524,1036,0.524,1037,0.524,1038,0.969,1039,0.524,1040,0.524,1041,0.524,1042,0.524,1043,0.524,1044,0.524,1045,0.524,1046,0.969,1047,0.524,1048,0.524,1049,0.524,1050,0.524,1051,0.524,1052,0.524,1053,0.524,1054,0.524,1055,0.524,1056,1.351,1057,0.524,1058,0.524,1059,0.524,1060,0.524,1061,0.524,1062,0.524,1063,0.524,1064,0.524,1065,0.524,1066,0.969,1067,0.524,1068,0.524,1069,0.524,1070,0.969,1071,0.524,1072,0.524,1073,0.524,1074,0.524,1075,0.524,1076,0.524,1077,0.524,1078,0.524,1079,0.524,1080,0.524,1081,0.524,1082,0.524,1083,0.524,1084,0.524,1085,0.969,1086,0.524,1087,0.969,1088,0.524,1089,0.524,1090,0.524,1091,0.524,1092,0.524,1093,0.524,1094,0.969,1095,0.524,1096,0.524,1097,0.524,1098,0.524,1099,0.969,1100,0.969,1101,0.524,1102,0.969,1103,0.524,1104,0.969,1105,0.524,1106,0.969,1107,0.969,1108,0.524,1109,0.524,1110,0.524,1111,0.524,1112,0.524,1113,0.524,1114,0.524,1115,0.524,1116,0.524,1117,0.524,1118,0.524,1119,0.524,1120,0.524,1121,0.524,1122,0.524,1123,0.524,1124,0.524,1125,0.524,1126,0.524,1127,0.524,1128,0.969,1129,0.524,1130,0.524,1131,0.524,1132,0.524,1133,0.524,1134,0.524,1135,0.8,1136,0.524,1137,0.969,1138,0.524,1139,0.969,1140,0.524,1141,0.524,1142,0.524,1143,0.524,1144,0.524,1145,0.524,1146,0.524,1147,0.524,1148,0.524,1149,0.524,1150,0.524,1151,0.524,1152,0.524,1153,0.524,1154,0.524,1155,0.524,1156,0.524,1157,0.524,1158,0.524,1159,0.524,1160,0.524,1161,0.524,1162,0.524,1163,0.524,1164,0.969,1165,0.524,1166,0.524,1167,0.524,1168,0.524,1169,0.524,1170,0.524,1171,0.524,1172,0.524,1173,0.524,1174,0.524,1175,0.524,1176,0.524,1177,0.524,1178,0.524,1179,0.524,1180,0.524,1181,0.524,1182,0.524,1183,0.524,1184,0.524,1185,0.524,1186,0.432,1187,0.524,1188,0.432,1189,0.524,1190,0.969,1191,0.524,1192,0.524,1193,0.524,1194,0.969,1195,0.524,1196,0.524,1197,0.524,1198,0.524,1199,0.524,1200,0.524,1201,0.524,1202,0.524,1203,0.524,1204,0.524,1205,0.524,1206,0.524]],["title/modules.html",[171,2.282]],["body/modules.html",[38,0.033,78,0.029,79,0.033,80,0.029,170,2.915,171,2.595,181,2.595,272,3.38,360,3.845,1207,5.412,1208,5.412]],["title/overview.html",[1209,3.388]],["body/overview.html",[1,2.351,2,2.109,38,0.037,58,1.707,69,2.385,71,2.351,73,2.351,78,0.023,79,0.029,80,0.023,83,1.271,148,3.941,149,2.695,150,3.131,169,2.109,170,3.733,171,2.109,172,2.109,173,2.695,174,2.109,175,2.695,176,2.695,177,3.131,178,3.131,179,3.131,180,3.131,181,3.367,182,3.392,183,2.695,184,2.695,190,2.369,196,2.695,267,3.263,282,3.131,283,3.131,284,3.131,285,3.263,1209,3.131,1210,3.793]],["title/interfaces/progressBarsInterface.html",[194,2.486,316,2.14]],["body/interfaces/progressBarsInterface.html",[3,0.414,6,0.343,7,0.567,8,0.484,9,0.571,38,0.033,40,0.829,78,0.028,79,0.033,80,0.028,157,1.538,196,3.261,286,3.261,304,3.789,316,3.261,429,3.789,1211,4.59,1212,4.59]],["title/miscellaneous/variables.html",[605,1.573,1213,2.989]],["body/miscellaneous/variables.html",[7,0.632,8,0.461,9,0.544,21,0.236,32,1.166,38,0.038,40,0.963,48,2.132,49,2.132,78,0.019,79,0.026,80,0.019,104,3.011,113,1.756,136,3.33,138,2.356,143,2.356,197,1.565,198,3.193,199,3.398,236,1.973,268,4.219,269,4.219,299,1.576,300,2.607,301,1.756,406,3.011,408,2.607,409,3.498,454,2.244,471,2.244,605,1.973,813,3.498,888,3.498,891,3.498,1135,3.498,1186,3.498,1188,3.498,1213,2.607,1214,5.488,1215,5.111,1216,4.238,1217,4.238,1218,5.111,1219,3.158,1220,3.158,1221,5.111,1222,3.158,1223,3.158,1224,3.158,1225,3.158,1226,3.158,1227,3.158,1228,3.158,1229,4.238,1230,4.238,1231,3.158,1232,3.158,1233,3.158,1234,3.158,1235,4.238,1236,3.158]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":527,"title":{},"body":{"components/PlProgressComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["0.1.1",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["0.5.7",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["1.0",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["1.0.0",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["1.16.0",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":798,"title":{},"body":{"index.html":{}}}],["10,idajax",{"_index":790,"title":{},"body":{"index.html":{}}}],["12345678.1111",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["2.5.4",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"overview.html":{}}}],["3.1.0",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["3.8.20",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["300000",{"_index":890,"title":{},"body":{"index.html":{}}}],["4",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["4.1.0",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["6.3.3",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":1143,"title":{},"body":{"index.html":{}}}],["7.2.0",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1210,"title":{},"body":{"overview.html":{}}}],["abilitare",{"_index":1080,"title":{},"body":{"index.html":{}}}],["abilitazione",{"_index":831,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":421,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["accetta",{"_index":231,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["accodamento",{"_index":906,"title":{},"body":{"index.html":{}}}],["activemodal",{"_index":524,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["actual_component",{"_index":77,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["ad",{"_index":440,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["adattato",{"_index":722,"title":{},"body":{"index.html":{}}}],["aggiornamenti",{"_index":903,"title":{},"body":{"index.html":{}}}],["aggiungere",{"_index":381,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["aggiunte",{"_index":743,"title":{},"body":{"index.html":{}}}],["aggiunti",{"_index":763,"title":{},"body":{"index.html":{}}}],["aggiuntive",{"_index":718,"title":{},"body":{"index.html":{}}}],["aggiunto",{"_index":735,"title":{},"body":{"index.html":{}}}],["agli",{"_index":945,"title":{},"body":{"index.html":{}}}],["ajax",{"_index":318,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["al",{"_index":45,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["alcune",{"_index":1137,"title":{},"body":{"index.html":{}}}],["alcuni",{"_index":1181,"title":{},"body":{"index.html":{}}}],["alert",{"_index":16,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"index.html":{}}}],["alert'},{'name",{"_index":68,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["alert(title,message",{"_index":1167,"title":{},"body":{"index.html":{}}}],["alert.component.css",{"_index":18,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":20,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertcomponent",{"_index":1,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"modules/PlCoreModule.html":{},"components/PlProgressComponent.html":{},"overview.html":{}}}],["alertservice",{"_index":82,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["all'id",{"_index":938,"title":{},"body":{"index.html":{}}}],["all'immagine",{"_index":1156,"title":{},"body":{"index.html":{}}}],["all'interno",{"_index":673,"title":{},"body":{"index.html":{}}}],["alla",{"_index":248,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["alle",{"_index":964,"title":{},"body":{"index.html":{}}}],["allo",{"_index":655,"title":{},"body":{"index.html":{}}}],["altre",{"_index":495,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["altri",{"_index":1125,"title":{},"body":{"index.html":{}}}],["altro",{"_index":383,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["ambient",{"_index":268,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{},"miscellaneous/variables.html":{}}}],["ambientmodeloaderservice",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["ambientmodeproviderfactory",{"_index":607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ambientmodeproviderfactory(ambientmodeservice",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ambientmodeservice",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anche",{"_index":499,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["ancora",{"_index":935,"title":{},"body":{"index.html":{}}}],["angular",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/animations",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["annotation",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["annotazione",{"_index":844,"title":{},"body":{"index.html":{}}}],["annullamento",{"_index":937,"title":{},"body":{"index.html":{}}}],["anteposto",{"_index":872,"title":{},"body":{"index.html":{}}}],["apertura",{"_index":702,"title":{},"body":{"index.html":{}}}],["api",{"_index":782,"title":{},"body":{"index.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["app.component.css",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":69,"title":{"components/AppComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{},"index.html":{},"overview.html":{}}}],["appesantimenti",{"_index":835,"title":{},"body":{"index.html":{}}}],["appese",{"_index":685,"title":{},"body":{"index.html":{}}}],["applicationref",{"_index":89,"title":{},"body":{"injectables/AlertService.html":{}}}],["applicative",{"_index":742,"title":{},"body":{"index.html":{}}}],["applicativo",{"_index":687,"title":{},"body":{"index.html":{}}}],["applicazioni",{"_index":653,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":170,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":189,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{}}}],["appref",{"_index":88,"title":{},"body":{"injectables/AlertService.html":{}}}],["arr",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["array",{"_index":505,"title":{},"body":{"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraybuffer",{"_index":487,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["arrow",{"_index":232,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["ascolto",{"_index":949,"title":{},"body":{"index.html":{}}}],["assegnare",{"_index":234,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["assets",{"_index":1104,"title":{},"body":{"index.html":{}}}],["assets/public/mock",{"_index":1107,"title":{},"body":{"index.html":{}}}],["assets/public/mock/example/no/cache/api/122",{"_index":1095,"title":{},"body":{"index.html":{}}}],["attivato",{"_index":1019,"title":{},"body":{"index.html":{}}}],["attivi",{"_index":706,"title":{},"body":{"index.html":{}}}],["atto",{"_index":699,"title":{},"body":{"index.html":{}}}],["autenticazione",{"_index":714,"title":{},"body":{"index.html":{}}}],["author",{"_index":846,"title":{},"body":{"index.html":{}}}],["automatica",{"_index":985,"title":{},"body":{"index.html":{}}}],["automaticamente",{"_index":732,"title":{},"body":{"index.html":{}}}],["automatici",{"_index":1011,"title":{},"body":{"index.html":{}}}],["automatico",{"_index":1006,"title":{},"body":{"index.html":{}}}],["automatido",{"_index":753,"title":{},"body":{"index.html":{}}}],["autonomamente",{"_index":1114,"title":{},"body":{"index.html":{}}}],["autonomia",{"_index":689,"title":{},"body":{"index.html":{}}}],["autonomina",{"_index":769,"title":{},"body":{"index.html":{}}}],["avanzamenti",{"_index":698,"title":{},"body":{"index.html":{}}}],["avere",{"_index":855,"title":{},"body":{"index.html":{}}}],["avvalersi",{"_index":1138,"title":{},"body":{"index.html":{}}}],["avver",{"_index":827,"title":{},"body":{"index.html":{}}}],["avverte",{"_index":818,"title":{},"body":{"index.html":{}}}],["avviato",{"_index":806,"title":{},"body":{"index.html":{}}}],["avviene",{"_index":861,"title":{},"body":{"index.html":{}}}],["avvio",{"_index":885,"title":{},"body":{"index.html":{}}}],["background",{"_index":704,"title":{},"body":{"index.html":{}}}],["bar",{"_index":918,"title":{},"body":{"index.html":{}}}],["barre",{"_index":956,"title":{},"body":{"index.html":{}}}],["bars",{"_index":904,"title":{},"body":{"index.html":{}}}],["base",{"_index":445,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["binaria",{"_index":762,"title":{},"body":{"index.html":{}}}],["binaryfind",{"_index":543,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["blob",{"_index":355,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["blocco",{"_index":729,"title":{},"body":{"index.html":{}}}],["blog",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["body",{"_index":422,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"index.html":{}}}],["booleano",{"_index":252,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["bootstrap",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["broadcast",{"_index":315,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["browse",{"_index":1208,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":272,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.all",{"_index":1187,"title":{},"body":{"index.html":{}}}],["browser_valid",{"_index":1186,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["browseridentify",{"_index":270,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{}}}],["build",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["cacable",{"_index":851,"title":{},"body":{"index.html":{}}}],["cacable@/example/:api/:files",{"_index":812,"title":{},"body":{"index.html":{}}}],["cacable@/example/cacable/api?param1={0}&param2={1",{"_index":865,"title":{},"body":{"index.html":{}}}],["cacable@/example/cache/api?param1={0}&param2={1",{"_index":866,"title":{},"body":{"index.html":{}}}],["cachable",{"_index":892,"title":{},"body":{"index.html":{}}}],["cache",{"_index":198,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PlCacheMapService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cache_tag",{"_index":891,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cacheentry",{"_index":195,"title":{"interfaces/CacheEntry.html":{}},"body":{"interfaces/CacheEntry.html":{}}}],["call",{"_index":363,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["callback",{"_index":328,"title":{},"body":{"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["callmock(p1",{"_index":778,"title":{},"body":{"index.html":{}}}],["cambiare",{"_index":1131,"title":{},"body":{"index.html":{}}}],["cambio",{"_index":686,"title":{},"body":{"index.html":{}}}],["campo",{"_index":986,"title":{},"body":{"index.html":{}}}],["campodata",{"_index":996,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":210,"title":{},"body":{"components/ExampleComponent.html":{}}}],["cancellazione",{"_index":323,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["canvas",{"_index":345,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["canvastoimg",{"_index":332,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["canvastoimg(canvas",{"_index":339,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["caricamento/scaricamento",{"_index":950,"title":{},"body":{"index.html":{}}}],["cartelle",{"_index":1100,"title":{},"body":{"index.html":{}}}],["caso",{"_index":249,"title":{},"body":{"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["catch",{"_index":968,"title":{},"body":{"index.html":{}}}],["cattuare",{"_index":361,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["changevalues",{"_index":1068,"title":{},"body":{"index.html":{}}}],["changevaluesbykey",{"_index":1071,"title":{},"body":{"index.html":{}}}],["chart.js",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["chartjs",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["che",{"_index":253,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["chiamata",{"_index":771,"title":{},"body":{"index.html":{}}}],["chiamate",{"_index":438,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["chiamte",{"_index":679,"title":{},"body":{"index.html":{}}}],["chiavi",{"_index":819,"title":{},"body":{"index.html":{}}}],["chiusura",{"_index":34,"title":{},"body":{"components/AlertComponent.html":{}}}],["ci",{"_index":915,"title":{},"body":{"index.html":{}}}],["cicli",{"_index":640,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["citata",{"_index":1130,"title":{},"body":{"index.html":{}}}],["class",{"_index":188,"title":{"classes/AppPage.html":{},"classes/PlCoreUtils.html":{},"classes/PlHttpRequest.html":{}},"body":{"index.html":{}}}],["classdecorator",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classe",{"_index":305,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["classes",{"_index":190,"title":{},"body":{"classes/AppPage.html":{},"classes/PlCoreUtils.html":{},"classes/PlHttpRequest.html":{},"overview.html":{}}}],["classi",{"_index":999,"title":{},"body":{"index.html":{}}}],["cli",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":880,"title":{},"body":{"index.html":{}}}],["close",{"_index":520,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["closedialog",{"_index":28,"title":{},"body":{"components/AlertComponent.html":{}}}],["cluster_appmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_plcoremodule",{"_index":282,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["cluster_plcoremodule_declarations",{"_index":283,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["cluster_plcoremodule_providers",{"_index":284,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["coda",{"_index":54,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["code",{"_index":923,"title":{},"body":{"index.html":{}}}],["codice",{"_index":1042,"title":{},"body":{"index.html":{}}}],["cognome",{"_index":1046,"title":{},"body":{"index.html":{}}}],["collaudati",{"_index":659,"title":{},"body":{"index.html":{}}}],["comando",{"_index":926,"title":{},"body":{"index.html":{}}}],["combinazione",{"_index":497,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["come",{"_index":434,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["compatibili",{"_index":731,"title":{},"body":{"index.html":{}}}],["compiere",{"_index":911,"title":{},"body":{"index.html":{}}}],["complesso",{"_index":737,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{},"index.html":{}}}],["component_template",{"_index":62,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["componente",{"_index":97,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["componente,in",{"_index":1008,"title":{},"body":{"index.html":{}}}],["componentfactoryresolver",{"_index":87,"title":{},"body":{"injectables/AlertService.html":{}}}],["componenti",{"_index":1021,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{},"overview.html":{}}}],["comportamento",{"_index":727,"title":{},"body":{"index.html":{}}}],["comprese",{"_index":375,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["comunque",{"_index":1128,"title":{},"body":{"index.html":{}}}],["con",{"_index":458,"title":{},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["configurabile",{"_index":1018,"title":{},"body":{"index.html":{}}}],["configurabili",{"_index":1179,"title":{},"body":{"index.html":{}}}],["configurando",{"_index":882,"title":{},"body":{"index.html":{}}}],["configurare",{"_index":893,"title":{},"body":{"index.html":{}}}],["configurate",{"_index":691,"title":{},"body":{"index.html":{}}}],["configurazione",{"_index":840,"title":{},"body":{"index.html":{}}}],["configurazioni",{"_index":1184,"title":{},"body":{"index.html":{}}}],["consegna",{"_index":1157,"title":{},"body":{"index.html":{}}}],["conseguente",{"_index":828,"title":{},"body":{"index.html":{}}}],["considerazione",{"_index":369,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["consiglia",{"_index":1090,"title":{},"body":{"index.html":{}}}],["console.log(info",{"_index":982,"title":{},"body":{"index.html":{}}}],["console.log(user",{"_index":1049,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{}}}],["constructor(activemodal",{"_index":522,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["constructor(ambientmodeloaderservice",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":86,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(http",{"_index":477,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["constructor(injector",{"_index":538,"title":{},"body":{"injectables/PlProgressService.html":{}}}],["constructor(objectservice",{"_index":428,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["constructor(pathmock",{"_index":411,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["constructor(plhttpservice",{"_index":338,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["constructor(private",{"_index":1176,"title":{},"body":{"index.html":{}}}],["container",{"_index":540,"title":{},"body":{"injectables/PlProgressService.html":{}}}],["contenente",{"_index":245,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["contenenti",{"_index":810,"title":{},"body":{"index.html":{}}}],["contenere",{"_index":347,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["contenete",{"_index":452,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["contenitore",{"_index":55,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["content_type",{"_index":484,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["contenttype",{"_index":483,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["contenuta",{"_index":493,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["context",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contiene",{"_index":1031,"title":{},"body":{"index.html":{}}}],["controllo",{"_index":664,"title":{},"body":{"index.html":{}}}],["conversione",{"_index":766,"title":{},"body":{"index.html":{}}}],["convertire",{"_index":1142,"title":{},"body":{"index.html":{}}}],["core",{"_index":8,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["corredato",{"_index":1043,"title":{},"body":{"index.html":{}}}],["corrente",{"_index":51,"title":{},"body":{"components/AlertComponent.html":{}}}],["correntemente",{"_index":758,"title":{},"body":{"index.html":{}}}],["corrispondere",{"_index":1120,"title":{},"body":{"index.html":{}}}],["cosi",{"_index":1085,"title":{},"body":{"index.html":{}}}],["costruire",{"_index":955,"title":{},"body":{"index.html":{}}}],["costrutto",{"_index":1148,"title":{},"body":{"index.html":{}}}],["creare",{"_index":257,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["created",{"_index":1206,"title":{},"body":{"index.html":{}}}],["creati",{"_index":1012,"title":{},"body":{"index.html":{}}}],["creato",{"_index":378,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["creazione",{"_index":364,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["css",{"_index":929,"title":{},"body":{"index.html":{}}}],["currentelement",{"_index":553,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["currentindex",{"_index":552,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["custom",{"_index":1160,"title":{},"body":{"index.html":{}}}],["custom_image",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["custom_image_version",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["customevent('pl:set",{"_index":1024,"title":{},"body":{"index.html":{}}}],["d",{"_index":992,"title":{},"body":{"index.html":{}}}],["da",{"_index":103,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dal",{"_index":940,"title":{},"body":{"index.html":{}}}],["dall'header",{"_index":757,"title":{},"body":{"index.html":{}}}],["dalla",{"_index":53,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["data",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"index.html":{}}}],["date",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["dati",{"_index":953,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["decoratore",{"_index":1017,"title":{},"body":{"index.html":{}}}],["decoratori",{"_index":764,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_path_mock",{"_index":1135,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["degli",{"_index":324,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["dei",{"_index":724,"title":{},"body":{"index.html":{}}}],["del",{"_index":241,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["del'intercettore",{"_index":291,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["del'ondestroy",{"_index":1007,"title":{},"body":{"index.html":{}}}],["delete",{"_index":473,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["delete(plttprequest",{"_index":479,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["dell'applicazione",{"_index":886,"title":{},"body":{"index.html":{}}}],["dell'elemento",{"_index":1149,"title":{},"body":{"index.html":{}}}],["dell'oggetto",{"_index":820,"title":{},"body":{"index.html":{}}}],["della",{"_index":35,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"index.html":{}}}],["delle",{"_index":310,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["dello",{"_index":733,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":172,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":222,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{}}}],["detail",{"_index":1026,"title":{},"body":{"index.html":{}}}],["detect",{"_index":271,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{}}}],["determinati",{"_index":777,"title":{},"body":{"index.html":{}}}],["detto",{"_index":832,"title":{},"body":{"index.html":{}}}],["deve",{"_index":346,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["devono",{"_index":1119,"title":{},"body":{"index.html":{}}}],["di",{"_index":56,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dialog",{"_index":23,"title":{},"body":{"components/AlertComponent.html":{},"dependencies.html":{}}}],["dialogo",{"_index":1164,"title":{},"body":{"index.html":{}}}],["dichiarare",{"_index":809,"title":{},"body":{"index.html":{}}}],["dichiarati",{"_index":730,"title":{},"body":{"index.html":{}}}],["dichiarativo",{"_index":1092,"title":{},"body":{"index.html":{}}}],["dichiarato",{"_index":1086,"title":{},"body":{"index.html":{}}}],["differences",{"_index":1063,"title":{},"body":{"index.html":{}}}],["dimensione",{"_index":748,"title":{},"body":{"index.html":{}}}],["dimensioni",{"_index":751,"title":{},"body":{"index.html":{}}}],["directive",{"_index":60,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["directives",{"_index":76,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["disabilitandola",{"_index":1175,"title":{},"body":{"index.html":{}}}],["disabilitare",{"_index":95,"title":{},"body":{"injectables/AlertService.html":{}}}],["disable_log",{"_index":1188,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dismessi",{"_index":683,"title":{},"body":{"index.html":{}}}],["disponibili",{"_index":1185,"title":{},"body":{"index.html":{}}}],["disposizione",{"_index":102,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["diversamente",{"_index":807,"title":{},"body":{"index.html":{}}}],["diversi",{"_index":657,"title":{},"body":{"index.html":{}}}],["diverso",{"_index":728,"title":{},"body":{"index.html":{}}}],["document.dispatchevent(new",{"_index":1023,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["documentazione",{"_index":675,"title":{},"body":{"index.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"injectables/PlGraphicService.html":{},"components/PlProgressComponent.html":{},"index.html":{}}}],["dom2jpeg",{"_index":333,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["dom2jpeg(elementsvg",{"_index":357,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["domtocanvas",{"_index":334,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["domtocanvas(elementodom",{"_index":362,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["dopo",{"_index":797,"title":{},"body":{"index.html":{}}}],["dove",{"_index":391,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["dovr",{"_index":875,"title":{},"body":{"index.html":{}}}],["down",{"_index":319,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["download",{"_index":388,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["download(streamdata",{"_index":486,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["download_temp",{"_index":503,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["downloaded",{"_index":534,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["downloading",{"_index":528,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["downloadurl",{"_index":474,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["downloadurl(url",{"_index":490,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["due",{"_index":916,"title":{},"body":{"index.html":{}}}],["durata",{"_index":1182,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":98,"title":{},"body":{"injectables/AlertService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["e.s",{"_index":859,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":191,"title":{},"body":{"classes/AppPage.html":{}}}],["ed",{"_index":839,"title":{},"body":{"index.html":{}}}],["eeee",{"_index":990,"title":{},"body":{"index.html":{}}}],["effettivamente",{"_index":1123,"title":{},"body":{"index.html":{}}}],["effettuare",{"_index":492,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["effettuate",{"_index":1192,"title":{},"body":{"index.html":{}}}],["elaborare",{"_index":1150,"title":{},"body":{"index.html":{}}}],["element",{"_index":59,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"injectables/PlGraphicService.html":{},"components/PlProgressComponent.html":{},"index.html":{}}}],["elemento",{"_index":359,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["elementodom",{"_index":389,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["elementref",{"_index":41,"title":{},"body":{"components/AlertComponent.html":{}}}],["elementsvg",{"_index":358,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["elencare",{"_index":1014,"title":{},"body":{"index.html":{}}}],["eliinatzione",{"_index":1004,"title":{},"body":{"index.html":{}}}],["eliminata",{"_index":898,"title":{},"body":{"index.html":{}}}],["elininato",{"_index":1030,"title":{},"body":{"index.html":{}}}],["enable",{"_index":105,"title":{},"body":{"injectables/AlertService.html":{}}}],["enablealertmessage",{"_index":85,"title":{},"body":{"injectables/AlertService.html":{}}}],["enablealertmessage(enable",{"_index":93,"title":{},"body":{"injectables/AlertService.html":{}}}],["enabled",{"_index":636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{}}}],["entrytime",{"_index":200,"title":{},"body":{"interfaces/CacheEntry.html":{}}}],["environment",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.exampleapi.format(\"p1\",\"p2",{"_index":860,"title":{},"body":{"index.html":{}}}],["environment.http.api.mock",{"_index":781,"title":{},"body":{"index.html":{}}}],["environment.http.api.mock.mock).subscribe(sb",{"_index":983,"title":{},"body":{"index.html":{}}}],["equipagiato",{"_index":772,"title":{},"body":{"index.html":{}}}],["error",{"_index":794,"title":{},"body":{"index.html":{}}}],["errorbean(error.message",{"_index":970,"title":{},"body":{"index.html":{}}}],["errorcode.systemerrorcode",{"_index":971,"title":{},"body":{"index.html":{}}}],["es",{"_index":633,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["escludendo",{"_index":1106,"title":{},"body":{"index.html":{}}}],["esecuzione",{"_index":265,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["eseguire",{"_index":768,"title":{},"body":{"index.html":{}}}],["esempi",{"_index":984,"title":{},"body":{"index.html":{}}}],["esempio",{"_index":441,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["esporre",{"_index":654,"title":{},"body":{"index.html":{}}}],["esporta",{"_index":1144,"title":{},"body":{"index.html":{}}}],["esposta",{"_index":1087,"title":{},"body":{"index.html":{}}}],["esposti",{"_index":681,"title":{},"body":{"index.html":{}}}],["essere",{"_index":351,"title":{},"body":{"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["event",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["eventi",{"_index":313,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["eventualmente",{"_index":400,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["evitando",{"_index":694,"title":{},"body":{"index.html":{}}}],["evitare",{"_index":834,"title":{},"body":{"index.html":{}}}],["example",{"_index":205,"title":{},"body":{"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{}}}],["example'},{'name",{"_index":72,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["example.component.css",{"_index":206,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example.component.html",{"_index":207,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example/:api/:file/**post.json",{"_index":1109,"title":{},"body":{"index.html":{}}}],["example/:api/:file/get.json",{"_index":1108,"title":{},"body":{"index.html":{}}}],["example/:id",{"_index":1127,"title":{},"body":{"index.html":{}}}],["example/no/cache/api?param1={0}&param2={1",{"_index":868,"title":{},"body":{"index.html":{}}}],["exampleapenocache",{"_index":867,"title":{},"body":{"index.html":{}}}],["exampleapi",{"_index":864,"title":{},"body":{"index.html":{}}}],["examplecomponent",{"_index":71,"title":{"components/ExampleComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{},"overview.html":{}}}],["execevent(event",{"_index":326,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["export",{"_index":1003,"title":{},"body":{"index.html":{}}}],["exports",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["false",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"components/PlProgressComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fase",{"_index":1083,"title":{},"body":{"index.html":{}}}],["feature",{"_index":678,"title":{},"body":{"index.html":{}}}],["fedelmente",{"_index":1147,"title":{},"body":{"index.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{}}}],["file,in",{"_index":725,"title":{},"body":{"index.html":{}}}],["file1",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["file2",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["filename",{"_index":488,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["files",{"_index":783,"title":{},"body":{"index.html":{}}}],["findbyvalue",{"_index":1073,"title":{},"body":{"index.html":{}}}],["findkey",{"_index":1077,"title":{},"body":{"index.html":{}}}],["finestra",{"_index":933,"title":{},"body":{"index.html":{}}}],["fix",{"_index":1191,"title":{},"body":{"index.html":{}}}],["flusso",{"_index":663,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1094,"title":{},"body":{"index.html":{}}}],["forkjoin",{"_index":475,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["forkjoin(plttprequest",{"_index":504,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["format",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["format_number|dstring",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formato",{"_index":403,"title":{},"body":{"injectables/PlGraphicService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["formattare",{"_index":857,"title":{},"body":{"index.html":{}}}],["formattazione",{"_index":830,"title":{},"body":{"index.html":{}}}],["fosse",{"_index":264,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["fulldate",{"_index":989,"title":{},"body":{"index.html":{}}}],["funaione",{"_index":387,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["function",{"_index":224,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["functions",{"_index":606,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funzine",{"_index":1152,"title":{},"body":{"index.html":{}}}],["funzioa",{"_index":1040,"title":{},"body":{"index.html":{}}}],["funzionalit",{"_index":31,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/PlCoreModule.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["funzionalita",{"_index":398,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["funzione",{"_index":237,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["funzioni",{"_index":943,"title":{},"body":{"index.html":{}}}],["funzionlita",{"_index":947,"title":{},"body":{"index.html":{}}}],["gestione",{"_index":1139,"title":{},"body":{"index.html":{}}}],["gestire",{"_index":661,"title":{},"body":{"index.html":{}}}],["gestita",{"_index":688,"title":{},"body":{"index.html":{}}}],["get(plttprequest",{"_index":506,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["get(req",{"_index":277,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["getbody",{"_index":431,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getiinterrupt",{"_index":302,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["getlocalhttpheaders",{"_index":512,"title":{},"body":{"injectables/PlNetworkService.html":{}}}],["getmethod",{"_index":467,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getmocked",{"_index":470,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getprogress",{"_index":521,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["getqueryparams",{"_index":447,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getting",{"_index":646,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":192,"title":{},"body":{"classes/AppPage.html":{}}}],["geturl",{"_index":456,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["gia",{"_index":262,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["giovamento",{"_index":914,"title":{},"body":{"index.html":{}}}],["gli",{"_index":1009,"title":{},"body":{"index.html":{}}}],["grado",{"_index":712,"title":{},"body":{"index.html":{}}}],["grafica",{"_index":1141,"title":{},"body":{"index.html":{}}}],["grafiche",{"_index":744,"title":{},"body":{"index.html":{}}}],["grafici",{"_index":371,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["graphic.service.ts",{"_index":331,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["grazie",{"_index":850,"title":{},"body":{"index.html":{}}}],["gulp",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["hanno",{"_index":775,"title":{},"body":{"index.html":{}}}],["help",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["here",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["heroes",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["hook",{"_index":998,"title":{},"body":{"index.html":{}}}],["html",{"_index":46,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"injectables/PlGraphicService.html":{},"components/PlProgressComponent.html":{},"dependencies.html":{},"index.html":{}}}],["html2canvas",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["htmlelement",{"_index":340,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["http",{"_index":301,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http.service.ts",{"_index":472,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["httpclient",{"_index":478,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["httphandler",{"_index":416,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["httprequest",{"_index":278,"title":{},"body":{"injectables/PlCacheMapService.html":{},"interceptors/PlHttpInterceptorMockService.html":{}}}],["httpresponse",{"_index":203,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PlCacheMapService.html":{}}}],["icevere",{"_index":952,"title":{},"body":{"index.html":{}}}],["id",{"_index":959,"title":{},"body":{"index.html":{}}}],["idajax",{"_index":787,"title":{},"body":{"index.html":{}}}],["identificare",{"_index":749,"title":{},"body":{"index.html":{}}}],["identificativo",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ie",{"_index":721,"title":{},"body":{"index.html":{}}}],["ignore",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["il",{"_index":96,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["illustra",{"_index":676,"title":{},"body":{"index.html":{}}}],["illustrativo",{"_index":1089,"title":{},"body":{"index.html":{}}}],["image",{"_index":498,"title":{},"body":{"injectables/PlHttpService.html":{},"dependencies.html":{}}}],["image2base64",{"_index":335,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["image2base64(imageurl",{"_index":393,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["imageurl",{"_index":394,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["immagine",{"_index":348,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["immagini",{"_index":376,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["immediata",{"_index":1171,"title":{},"body":{"index.html":{}}}],["impattano",{"_index":740,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["impone",{"_index":1093,"title":{},"body":{"index.html":{}}}],["imports",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["impostare",{"_index":821,"title":{},"body":{"index.html":{}}}],["inarray",{"_index":1065,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1211,"title":{},"body":{"interfaces/progressBarsInterface.html":{}}}],["indica",{"_index":254,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"miscellaneous/functions.html":{}}}],["indicare",{"_index":874,"title":{},"body":{"index.html":{}}}],["indicate",{"_index":1111,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"interfaces/progressBarsInterface.html":{}}}],["informazioni",{"_index":756,"title":{},"body":{"index.html":{}}}],["ingresso",{"_index":963,"title":{},"body":{"index.html":{}}}],["inibisce",{"_index":1020,"title":{},"body":{"index.html":{}}}],["inibizione",{"_index":767,"title":{},"body":{"index.html":{}}}],["iniettare",{"_index":392,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["initprocess",{"_index":218,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["inizializzazione",{"_index":1134,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":81,"title":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{}},"body":{}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"overview.html":{}}}],["injectiontoken('defaul",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('defaultimeout",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('tag",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('browser",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('disabilita",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":90,"title":{},"body":{"injectables/AlertService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{}}}],["innescare",{"_index":713,"title":{},"body":{"index.html":{}}}],["input",{"_index":216,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlUtilsService.html":{}}}],["input.arr.length",{"_index":551,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["input.searchelement",{"_index":554,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["inserimento",{"_index":752,"title":{},"body":{"index.html":{}}}],["inserire",{"_index":842,"title":{},"body":{"index.html":{}}}],["insert",{"_index":1067,"title":{},"body":{"index.html":{}}}],["installare",{"_index":717,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":410,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["intercept(request",{"_index":414,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["interceptor",{"_index":406,"title":{"interceptors/PlHttpInterceptorMockService.html":{}},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"miscellaneous/variables.html":{}}}],["interceptors",{"_index":407,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["intercettare",{"_index":669,"title":{},"body":{"index.html":{}}}],["intercettazione",{"_index":711,"title":{},"body":{"index.html":{}}}],["intercetter",{"_index":1112,"title":{},"body":{"index.html":{}}}],["interface",{"_index":194,"title":{"interfaces/CacheEntry.html":{},"interfaces/progressBarsInterface.html":{}},"body":{}}],["interfaces",{"_index":196,"title":{},"body":{"interfaces/CacheEntry.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{}}}],["interrupt",{"_index":482,"title":{},"body":{"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{}}}],["interrupt(obj",{"_index":525,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["interrupted",{"_index":518,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["introdotto",{"_index":1159,"title":{},"body":{"index.html":{}}}],["introducendo",{"_index":1196,"title":{},"body":{"index.html":{}}}],["introduzione",{"_index":1197,"title":{},"body":{"index.html":{}}}],["invariate",{"_index":1205,"title":{},"body":{"index.html":{}}}],["invocare",{"_index":924,"title":{},"body":{"index.html":{}}}],["invocato",{"_index":469,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["isnullorempty",{"_index":1055,"title":{},"body":{"index.html":{}}}],["istruzione",{"_index":1133,"title":{},"body":{"index.html":{}}}],["it_it",{"_index":634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":1066,"title":{},"body":{"index.html":{}}}],["items",{"_index":1064,"title":{},"body":{"index.html":{}}}],["jpeg",{"_index":1153,"title":{},"body":{"index.html":{}}}],["jquery",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["json,key",{"_index":1072,"title":{},"body":{"index.html":{}}}],["json,previousvalue",{"_index":1069,"title":{},"body":{"index.html":{}}}],["json2array",{"_index":1075,"title":{},"body":{"index.html":{}}}],["json2flat",{"_index":1074,"title":{},"body":{"index.html":{}}}],["json2flatobj",{"_index":1076,"title":{},"body":{"index.html":{}}}],["key",{"_index":1212,"title":{},"body":{"interfaces/progressBarsInterface.html":{}}}],["keyfind",{"_index":1078,"title":{},"body":{"index.html":{}}}],["kill",{"_index":946,"title":{},"body":{"index.html":{}}}],["killajxcall(idajax:string",{"_index":977,"title":{},"body":{"index.html":{}}}],["killare",{"_index":707,"title":{},"body":{"index.html":{}}}],["ko",{"_index":548,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["kook",{"_index":641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["l'alberatura",{"_index":1129,"title":{},"body":{"index.html":{}}}],["l'elemento",{"_index":1029,"title":{},"body":{"index.html":{}}}],["l'esclusione",{"_index":823,"title":{},"body":{"index.html":{}}}],["l'evento",{"_index":804,"title":{},"body":{"index.html":{}}}],["l'id",{"_index":961,"title":{},"body":{"index.html":{}}}],["l'immagine",{"_index":365,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["l'intero",{"_index":1145,"title":{},"body":{"index.html":{}}}],["l'oggetto",{"_index":448,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["l'osservatore",{"_index":1155,"title":{},"body":{"index.html":{}}}],["l'utilizzo",{"_index":1169,"title":{},"body":{"index.html":{}}}],["l.piciollo",{"_index":491,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["la",{"_index":33,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["lanciare",{"_index":1022,"title":{},"body":{"index.html":{}}}],["lanciato",{"_index":295,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["lancio",{"_index":322,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["lasciare",{"_index":684,"title":{},"body":{"index.html":{}}}],["le",{"_index":299,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":58,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ExampleComponent.html":{},"modules/PlCoreModule.html":{},"components/PlProgressComponent.html":{},"overview.html":{}}}],["lib",{"_index":74,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{},"index.html":{}}}],["library",{"_index":648,"title":{},"body":{"index.html":{}}}],["library.module.ts",{"_index":287,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["library.service.ts",{"_index":304,"title":{},"body":{"classes/PlCoreUtils.html":{},"interfaces/progressBarsInterface.html":{}}}],["library/src/lib/bean/pl",{"_index":419,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["library/src/lib/component/alert/alert.component.ts",{"_index":10,"title":{},"body":{"components/AlertComponent.html":{}}}],["library/src/lib/component/alert/alert.service.ts",{"_index":84,"title":{},"body":{"injectables/AlertService.html":{}}}],["library/src/lib/component/progress/pl",{"_index":513,"title":{},"body":{"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{}}}],["library/src/lib/decorator/decordator.ts",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library/src/lib/initializer/ambientmodeprovider.ts",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library/src/lib/interceptor/pl",{"_index":408,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"miscellaneous/variables.html":{}}}],["library/src/lib/pl",{"_index":286,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"interfaces/progressBarsInterface.html":{}}}],["library/src/lib/service/pl",{"_index":197,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"miscellaneous/variables.html":{}}}],["library/src/test.ts",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libreria",{"_index":649,"title":{},"body":{"index.html":{}}}],["link",{"_index":502,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["links",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":529,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["lista",{"_index":309,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["listenevent(event",{"_index":327,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["literal",{"_index":429,"title":{},"body":{"classes/PlHttpRequest.html":{},"interfaces/progressBarsInterface.html":{}}}],["lo",{"_index":801,"title":{},"body":{"index.html":{}}}],["load",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["local",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["localeid",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["log",{"_index":236,"title":{},"body":{"injectables/PLWorkerService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["log.subscribe(response",{"_index":1041,"title":{},"body":{"index.html":{}}}],["loggati",{"_index":1001,"title":{},"body":{"index.html":{}}}],["loro",{"_index":708,"title":{},"body":{"index.html":{}}}],["luca",{"_index":1051,"title":{},"body":{"index.html":{}}}],["ma",{"_index":372,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["magari",{"_index":973,"title":{},"body":{"index.html":{}}}],["mal",{"_index":829,"title":{},"body":{"index.html":{}}}],["mancanti",{"_index":672,"title":{},"body":{"index.html":{}}}],["mantenuto",{"_index":1146,"title":{},"body":{"index.html":{}}}],["map.service.ts",{"_index":199,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PlCacheMapService.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":825,"title":{},"body":{"index.html":{}}}],["matching",{"_index":79,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["max_cache_age",{"_index":888,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["maxindex",{"_index":550,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["meccanismo",{"_index":723,"title":{},"body":{"index.html":{}}}],["mentre",{"_index":384,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["message",{"_index":64,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["messageinfo",{"_index":25,"title":{},"body":{"components/AlertComponent.html":{}}}],["messageinfo.body",{"_index":65,"title":{},"body":{"components/AlertComponent.html":{}}}],["messageinfo.title",{"_index":63,"title":{},"body":{"components/AlertComponent.html":{}}}],["messaggi",{"_index":57,"title":{},"body":{"components/AlertComponent.html":{}}}],["messaggio",{"_index":50,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["messe",{"_index":921,"title":{},"body":{"index.html":{}}}],["messo",{"_index":101,"title":{},"body":{"injectables/AlertService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["method",{"_index":426,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["method:\"get",{"_index":814,"title":{},"body":{"index.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{}}}],["metodi",{"_index":321,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["metodo",{"_index":468,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["mette",{"_index":833,"title":{},"body":{"index.html":{}}}],["mettersi",{"_index":941,"title":{},"body":{"index.html":{}}}],["migliorata",{"_index":1195,"title":{},"body":{"index.html":{}}}],["millisecondi",{"_index":799,"title":{},"body":{"index.html":{}}}],["milliseconds",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minindex",{"_index":549,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["miscellaneous",{"_index":605,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":991,"title":{},"body":{"index.html":{}}}],["mmomento",{"_index":705,"title":{},"body":{"index.html":{}}}],["mock",{"_index":471,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mock.service.ts",{"_index":409,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"miscellaneous/variables.html":{}}}],["mockare",{"_index":1126,"title":{},"body":{"index.html":{}}}],["mocked",{"_index":427,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["modale",{"_index":36,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["modalit",{"_index":954,"title":{},"body":{"index.html":{}}}],["modalita",{"_index":1036,"title":{},"body":{"index.html":{}}}],["modalservice",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["mode.service.ts",{"_index":269,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{},"miscellaneous/variables.html":{}}}],["modi",{"_index":917,"title":{},"body":{"index.html":{}}}],["modificare",{"_index":1200,"title":{},"body":{"index.html":{}}}],["modo",{"_index":379,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["module",{"_index":169,"title":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["modules",{"_index":171,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["modulo",{"_index":884,"title":{},"body":{"index.html":{}}}],["molto",{"_index":1170,"title":{},"body":{"index.html":{}}}],["momento",{"_index":239,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["monitorate",{"_index":908,"title":{},"body":{"index.html":{}}}],["mostra",{"_index":696,"title":{},"body":{"index.html":{}}}],["mostrano",{"_index":936,"title":{},"body":{"index.html":{}}}],["mostrare",{"_index":401,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["mostrato",{"_index":1079,"title":{},"body":{"index.html":{}}}],["mostrer",{"_index":1163,"title":{},"body":{"index.html":{}}}],["motore",{"_index":877,"title":{},"body":{"index.html":{}}}],["movedown",{"_index":1059,"title":{},"body":{"index.html":{}}}],["moveto",{"_index":1060,"title":{},"body":{"index.html":{}}}],["moveup",{"_index":1061,"title":{},"body":{"index.html":{}}}],["name",{"_index":67,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"miscellaneous/functions.html":{}}}],["namefile",{"_index":396,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["namethred",{"_index":217,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["nata",{"_index":1165,"title":{},"body":{"index.html":{}}}],["nativo",{"_index":100,"title":{},"body":{"injectables/AlertService.html":{}}}],["navigateto",{"_index":193,"title":{},"body":{"classes/AppPage.html":{}}}],["navigationstart",{"_index":293,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["navigazione",{"_index":666,"title":{},"body":{"index.html":{}}}],["necessitano",{"_index":1117,"title":{},"body":{"index.html":{}}}],["nei",{"_index":643,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nel",{"_index":494,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["nell'esempio",{"_index":1118,"title":{},"body":{"index.html":{}}}],["nell'osservable",{"_index":404,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["nella",{"_index":845,"title":{},"body":{"index.html":{}}}],["nelle",{"_index":1193,"title":{},"body":{"index.html":{}}}],["network.service.ts",{"_index":511,"title":{},"body":{"injectables/PlNetworkService.html":{}}}],["new",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":415,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["nextvalue",{"_index":1070,"title":{},"body":{"index.html":{}}}],["ng",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["ngbactivemodal",{"_index":523,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["ngbmodal",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["ngbmodalref",{"_index":541,"title":{},"body":{"injectables/PlProgressService.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["nome",{"_index":233,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["nome:\"luca",{"_index":1045,"title":{},"body":{"index.html":{}}}],["non",{"_index":230,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nota",{"_index":852,"title":{},"body":{"index.html":{}}}],["notare",{"_index":870,"title":{},"body":{"index.html":{}}}],["null",{"_index":47,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PlCacheMapService.html":{},"index.html":{}}}],["null).subscribe(sb",{"_index":791,"title":{},"body":{"index.html":{}}}],["null);le",{"_index":1116,"title":{},"body":{"index.html":{}}}],["number",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CacheEntry.html":{},"components/PlProgressComponent.html":{},"index.html":{}}}],["numbers",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["numero",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nuove",{"_index":651,"title":{},"body":{"index.html":{}}}],["nuovi",{"_index":902,"title":{},"body":{"index.html":{}}}],["nuovo",{"_index":258,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["nuovo/path",{"_index":1136,"title":{},"body":{"index.html":{}}}],["o",{"_index":382,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["obj",{"_index":526,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["object",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"classes/PlCoreUtils.html":{},"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["objectservice",{"_index":430,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["obs.complete",{"_index":793,"title":{},"body":{"index.html":{}}}],["obs.error(error",{"_index":795,"title":{},"body":{"index.html":{}}}],["obs.next(sb",{"_index":792,"title":{},"body":{"index.html":{}}}],["observable",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"injectables/PlHttpService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["observable(obs",{"_index":780,"title":{},"body":{"index.html":{}}}],["observableesempio",{"_index":1158,"title":{},"body":{"index.html":{}}}],["observer",{"_index":385,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["occorre",{"_index":256,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["occupa",{"_index":342,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["occupano",{"_index":660,"title":{},"body":{"index.html":{}}}],["ogetto",{"_index":443,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["oggetto",{"_index":244,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["ok",{"_index":66,"title":{},"body":{"components/AlertComponent.html":{},"components/ExampleComponent.html":{},"injectables/PlUtilsService.html":{}}}],["ok(currentindex",{"_index":555,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["onclose",{"_index":208,"title":{},"body":{"components/ExampleComponent.html":{}}}],["onfilechange1",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["onfilechange1(event",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["onfilechange2",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["onfilechange2(event",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["operators",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["opportunamente",{"_index":883,"title":{},"body":{"index.html":{}}}],["opportuno",{"_index":841,"title":{},"body":{"index.html":{}}}],["oppure",{"_index":260,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"miscellaneous/functions.html":{}}}],["opzioni",{"_index":1178,"title":{},"body":{"index.html":{}}}],["ora",{"_index":1198,"title":{},"body":{"index.html":{}}}],["ospitante",{"_index":716,"title":{},"body":{"index.html":{}}}],["ospitare",{"_index":1101,"title":{},"body":{"index.html":{}}}],["osservatori",{"_index":1015,"title":{},"body":{"index.html":{}}}],["out",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["overview",{"_index":1209,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ovviamente",{"_index":800,"title":{},"body":{"index.html":{}}}],["p1",{"_index":784,"title":{},"body":{"index.html":{}}}],["p2",{"_index":779,"title":{},"body":{"index.html":{}}}],["pacchetto",{"_index":674,"title":{},"body":{"index.html":{}}}],["package",{"_index":556,"title":{"dependencies.html":{}},"body":{}}],["pagina",{"_index":746,"title":{},"body":{"index.html":{}}}],["pagine",{"_index":667,"title":{},"body":{"index.html":{}}}],["paraetri",{"_index":863,"title":{},"body":{"index.html":{}}}],["param",{"_index":958,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"miscellaneous/functions.html":{}}}],["parametri",{"_index":246,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["params",{"_index":450,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["partendo",{"_index":1154,"title":{},"body":{"index.html":{}}}],["partezza",{"_index":240,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["partire",{"_index":399,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["passando",{"_index":501,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["passare",{"_index":247,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["passassata",{"_index":462,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["passati",{"_index":459,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["patch",{"_index":476,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["patch(plttprequest",{"_index":507,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["path",{"_index":454,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pathmock",{"_index":413,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["pathparam",{"_index":822,"title":{},"body":{"index.html":{}}}],["pathparams",{"_index":425,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["per",{"_index":32,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":519,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["performance",{"_index":741,"title":{},"body":{"index.html":{}}}],["permesso",{"_index":1032,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1025,"title":{},"body":{"index.html":{}}}],["personale",{"_index":1180,"title":{},"body":{"index.html":{}}}],["pesanti",{"_index":739,"title":{},"body":{"index.html":{}}}],["pic",{"_index":1047,"title":{},"body":{"index.html":{}}}],["piciollo",{"_index":1052,"title":{},"body":{"index.html":{}}}],["piu",{"_index":250,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["pl",{"_index":515,"title":{},"body":{"components/PlProgressComponent.html":{},"index.html":{}}}],["plambientmodeloaderservice",{"_index":267,"title":{"injectables/PlAmbientModeLoaderService.html":{}},"body":{"injectables/PlAmbientModeLoaderService.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["plcachemapservice",{"_index":273,"title":{"injectables/PlCacheMapService.html":{}},"body":{"injectables/PlCacheMapService.html":{}}}],["plcoremodule",{"_index":181,"title":{"modules/PlCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["plcoreutils",{"_index":303,"title":{"classes/PlCoreUtils.html":{}},"body":{"classes/PlCoreUtils.html":{},"components/PlProgressComponent.html":{}}}],["plcoreutils.progressbars[id].interrupt.next(true",{"_index":789,"title":{},"body":{"index.html":{}}}],["plcoreutils.progressbars[idajax].changed",{"_index":967,"title":{},"body":{"index.html":{}}}],["plcoreutils.progressbars[idajax].changed.subscribe(info",{"_index":981,"title":{},"body":{"index.html":{}}}],["plcoreutils.progressbars[idajax].interrupt.next(true",{"_index":978,"title":{},"body":{"index.html":{}}}],["plcoreutils.progressbars[progress].loaded",{"_index":535,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["plcoreutils.progressbars[progress].percent",{"_index":531,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["plcoreutils.progressbars[progress].size",{"_index":533,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["plcoreutils.progressbars[progress].url",{"_index":530,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["pldelay",{"_index":609,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pldelay(3000",{"_index":1039,"title":{},"body":{"index.html":{}}}],["pldelay(6000",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["pldelay(milliseconds",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plformatdate",{"_index":611,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plformatdate(format",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plformatdate(format_date.fulldate",{"_index":994,"title":{},"body":{"index.html":{}}}],["plformatdate(undefined",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["plgraphicservice",{"_index":330,"title":{"injectables/PlGraphicService.html":{}},"body":{"injectables/PlGraphicService.html":{}}}],["plhttpinterceptormockservice",{"_index":285,"title":{"interceptors/PlHttpInterceptorMockService.html":{}},"body":{"modules/PlCoreModule.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"overview.html":{}}}],["plhttprequest",{"_index":418,"title":{"classes/PlHttpRequest.html":{}},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["plhttpservice",{"_index":115,"title":{"injectables/PlHttpService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{}}}],["plnetworkservice",{"_index":510,"title":{"injectables/PlNetworkService.html":{}},"body":{"injectables/PlNetworkService.html":{}}}],["plnumberformat",{"_index":612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plnumberformat(format",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plnumberformat(format_number.it",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["plpermission",{"_index":613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plpermission(enabled",{"_index":635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plpermission(environment.production",{"_index":1034,"title":{},"body":{"index.html":{}}}],["plpermission(true",{"_index":1028,"title":{},"body":{"index.html":{}}}],["plprogresscomponent",{"_index":73,"title":{"components/PlProgressComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"modules/PlCoreModule.html":{},"components/PlProgressComponent.html":{},"overview.html":{}}}],["plprogressservice",{"_index":125,"title":{"injectables/PlProgressService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PlProgressService.html":{}}}],["pltracehooks",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["pltracehooks(disabled",{"_index":638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pltracemethod",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plttprequest",{"_index":485,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["plugin",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["plunsubscribe",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plunsubscribe(ignore",{"_index":644,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["plutilsservice",{"_index":123,"title":{"injectables/PlUtilsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PlUtilsService.html":{}}}],["plworkerservice",{"_index":211,"title":{"injectables/PLWorkerService.html":{}},"body":{"injectables/PLWorkerService.html":{}}}],["poeter",{"_index":356,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["poi",{"_index":900,"title":{},"body":{"index.html":{}}}],["popper.js",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":1062,"title":{},"body":{"index.html":{}}}],["posizione",{"_index":862,"title":{},"body":{"index.html":{}}}],["possibile",{"_index":307,"title":{},"body":{"classes/PlCoreUtils.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["possibilit",{"_index":692,"title":{},"body":{"index.html":{}}}],["possibilita",{"_index":738,"title":{},"body":{"index.html":{}}}],["possono",{"_index":682,"title":{},"body":{"index.html":{}}}],["post",{"_index":435,"title":{},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["post(plttprequest",{"_index":508,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["post_deploy",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["posta",{"_index":1103,"title":{},"body":{"index.html":{}}}],["post||get||put||delete||patch",{"_index":1098,"title":{},"body":{"index.html":{}}}],["poter",{"_index":899,"title":{},"body":{"index.html":{}}}],["poterlo",{"_index":380,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["pre_deploy",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["precedentemente",{"_index":960,"title":{},"body":{"index.html":{}}}],["precedenti",{"_index":1194,"title":{},"body":{"index.html":{}}}],["predefinita",{"_index":1173,"title":{},"body":{"index.html":{}}}],["prelevare",{"_index":1096,"title":{},"body":{"index.html":{}}}],["prende",{"_index":974,"title":{},"body":{"index.html":{}}}],["prendera",{"_index":987,"title":{},"body":{"index.html":{}}}],["prendere",{"_index":1016,"title":{},"body":{"index.html":{}}}],["presente",{"_index":263,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["presenti",{"_index":461,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["presi",{"_index":368,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["previsto",{"_index":975,"title":{},"body":{"index.html":{}}}],["private",{"_index":995,"title":{},"body":{"index.html":{}}}],["procedere",{"_index":979,"title":{},"body":{"index.html":{}}}],["processato",{"_index":52,"title":{},"body":{"components/AlertComponent.html":{}}}],["processi",{"_index":703,"title":{},"body":{"index.html":{}}}],["processo",{"_index":242,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["production",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilo1,profilo2,profilo3",{"_index":1027,"title":{},"body":{"index.html":{}}}],["progress",{"_index":75,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"classes/PlCoreUtils.html":{},"components/PlProgressComponent.html":{},"index.html":{}}}],["progress.component.css",{"_index":516,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["progress.component.html",{"_index":517,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["progress.component.ts",{"_index":514,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["progress.service.ts",{"_index":536,"title":{},"body":{"injectables/PlProgressService.html":{}}}],["progressbar",{"_index":311,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["progressbars",{"_index":314,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["progressbarsinterface",{"_index":316,"title":{"interfaces/progressBarsInterface.html":{}},"body":{"classes/PlCoreUtils.html":{},"interfaces/progressBarsInterface.html":{}}}],["progressione",{"_index":909,"title":{},"body":{"index.html":{}}}],["progressioni",{"_index":697,"title":{},"body":{"index.html":{}}}],["progressservice",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/.../ambientmodeprovider.ts",{"_index":608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../decordator.ts",{"_index":610,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../pl",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../test.ts",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/pl",{"_index":7,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"miscellaneous/functions.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":225,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["promise((ok",{"_index":547,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["pronti",{"_index":658,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"interfaces/CacheEntry.html":{},"classes/PlCoreUtils.html":{},"components/PlProgressComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["propertydecorator",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["proprio",{"_index":1202,"title":{},"body":{"index.html":{}}}],["prova",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["provide",{"_index":887,"title":{},"body":{"index.html":{}}}],["providers",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["provveder",{"_index":811,"title":{},"body":{"index.html":{}}}],["pu",{"_index":869,"title":{},"body":{"index.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["public/mock",{"_index":1189,"title":{},"body":{"index.html":{}}}],["pulsante",{"_index":808,"title":{},"body":{"index.html":{}}}],["puo",{"_index":350,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["put",{"_index":276,"title":{},"body":{"injectables/PlCacheMapService.html":{},"injectables/PlHttpService.html":{}}}],["put(plttprequest",{"_index":509,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["put(req",{"_index":280,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["quale",{"_index":930,"title":{},"body":{"index.html":{}}}],["qualsiasi",{"_index":881,"title":{},"body":{"index.html":{}}}],["quanto",{"_index":726,"title":{},"body":{"index.html":{}}}],["quel",{"_index":1013,"title":{},"body":{"index.html":{}}}],["quello",{"_index":1122,"title":{},"body":{"index.html":{}}}],["query",{"_index":449,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["queryparams",{"_index":424,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["questa",{"_index":349,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["questi",{"_index":1115,"title":{},"body":{"index.html":{}}}],["questo",{"_index":296,"title":{},"body":{"modules/PlCoreModule.html":{},"index.html":{}}}],["queuemessageinfo",{"_index":26,"title":{},"body":{"components/AlertComponent.html":{}}}],["quindi",{"_index":856,"title":{},"body":{"index.html":{}}}],["raffigurante",{"_index":444,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["rc.5",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":1033,"title":{},"body":{"index.html":{}}}],["realizzato",{"_index":905,"title":{},"body":{"index.html":{}}}],["realtime",{"_index":747,"title":{},"body":{"index.html":{}}}],["referenziato",{"_index":366,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["registrarsi",{"_index":944,"title":{},"body":{"index.html":{}}}],["registrazione",{"_index":312,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["relativo",{"_index":1097,"title":{},"body":{"index.html":{}}}],["release_version",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["removel",{"_index":329,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["repentine",{"_index":837,"title":{},"body":{"index.html":{}}}],["reperimento",{"_index":290,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["reperire",{"_index":755,"title":{},"body":{"index.html":{}}}],["req",{"_index":279,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["request",{"_index":417,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"index.html":{}}}],["request.ts",{"_index":420,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["require",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":281,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["reset",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["response",{"_index":201,"title":{},"body":{"interfaces/CacheEntry.html":{},"index.html":{}}}],["response_type",{"_index":481,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["response_type.arraybuffer",{"_index":786,"title":{},"body":{"index.html":{}}}],["responsetype",{"_index":480,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["restituido",{"_index":962,"title":{},"body":{"index.html":{}}}],["restituisce",{"_index":377,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["result",{"_index":78,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":80,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["rete",{"_index":500,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["retrieve",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":546,"title":{},"body":{"injectables/PlUtilsService.html":{},"index.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"miscellaneous/functions.html":{}}}],["riadattata",{"_index":464,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["ricerca",{"_index":761,"title":{},"body":{"index.html":{}}}],["ricevere",{"_index":632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["richiamando",{"_index":700,"title":{},"body":{"index.html":{}}}],["richiamare",{"_index":466,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["richiamata",{"_index":238,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["richiedere",{"_index":901,"title":{},"body":{"index.html":{}}}],["richieste",{"_index":300,"title":{},"body":{"modules/PlCoreModule.html":{},"miscellaneous/variables.html":{}}}],["richimandola",{"_index":858,"title":{},"body":{"index.html":{}}}],["riconosciuta",{"_index":848,"title":{},"body":{"index.html":{}}}],["riferimento",{"_index":44,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["rimanere",{"_index":948,"title":{},"body":{"index.html":{}}}],["rimaste",{"_index":1204,"title":{},"body":{"index.html":{}}}],["rintracciare",{"_index":932,"title":{},"body":{"index.html":{}}}],["riporta",{"_index":847,"title":{},"body":{"index.html":{}}}],["riportano",{"_index":1140,"title":{},"body":{"index.html":{}}}],["ripristinare",{"_index":99,"title":{},"body":{"injectables/AlertService.html":{}}}],["risalire",{"_index":308,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["rispettare",{"_index":1091,"title":{},"body":{"index.html":{}}}],["risposta",{"_index":353,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["ritardata",{"_index":1035,"title":{},"body":{"index.html":{}}}],["ritorna",{"_index":432,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["ritornare",{"_index":1172,"title":{},"body":{"index.html":{}}}],["ritornata",{"_index":354,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["ritorno",{"_index":390,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["root",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":70,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["rotta",{"_index":292,"title":{},"body":{"modules/PlCoreModule.html":{},"index.html":{}}}],["routine",{"_index":1162,"title":{},"body":{"index.html":{}}}],["routing",{"_index":289,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["run",{"_index":213,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["run(workerfunction",{"_index":215,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["runtime",{"_index":957,"title":{},"body":{"index.html":{}}}],["runurl",{"_index":214,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["runurl(url",{"_index":266,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["rx",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["salvare",{"_index":1151,"title":{},"body":{"index.html":{}}}],["sar",{"_index":1121,"title":{},"body":{"index.html":{}}}],["sass",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["scaduto",{"_index":896,"title":{},"body":{"index.html":{}}}],["scaricamento",{"_index":802,"title":{},"body":{"index.html":{}}}],["scaricare",{"_index":343,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["scatenata",{"_index":1161,"title":{},"body":{"index.html":{}}}],["schermo",{"_index":402,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["scopo",{"_index":1088,"title":{},"body":{"index.html":{}}}],["screenshot",{"_index":745,"title":{},"body":{"index.html":{}}}],["se",{"_index":255,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["secondi",{"_index":1037,"title":{},"body":{"index.html":{}}}],["seguente",{"_index":925,"title":{},"body":{"index.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["semplice",{"_index":374,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["semplicemente",{"_index":1174,"title":{},"body":{"index.html":{}}}],["semplici",{"_index":912,"title":{},"body":{"index.html":{}}}],["sempre",{"_index":1132,"title":{},"body":{"index.html":{}}}],["senza",{"_index":463,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["separato",{"_index":229,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["serve",{"_index":931,"title":{},"body":{"index.html":{}}}],["service",{"_index":423,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["servizi",{"_index":433,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["servizio",{"_index":446,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["setbody(object",{"_index":436,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["setpathparams(object",{"_index":453,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["setqueryparams(object",{"_index":451,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["setservice(object",{"_index":442,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["settimeout((id",{"_index":788,"title":{},"body":{"index.html":{}}}],["seturl(url",{"_index":465,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["seìtesi",{"_index":325,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["showmessage",{"_index":1166,"title":{},"body":{"index.html":{}}}],["showqueuedownload",{"_index":537,"title":{},"body":{"injectables/PlProgressService.html":{}}}],["showqueuedownload(container",{"_index":539,"title":{},"body":{"injectables/PlProgressService.html":{}}}],["si",{"_index":341,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sia",{"_index":878,"title":{},"body":{"index.html":{}}}],["siano",{"_index":460,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["simulare",{"_index":1082,"title":{},"body":{"index.html":{}}}],["simulazioni",{"_index":770,"title":{},"body":{"index.html":{}}}],["singola",{"_index":922,"title":{},"body":{"index.html":{}}}],["singolinstance",{"_index":220,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["sistema",{"_index":715,"title":{},"body":{"index.html":{}}}],["size",{"_index":532,"title":{},"body":{"components/PlProgressComponent.html":{}}}],["solo",{"_index":373,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["sono",{"_index":853,"title":{},"body":{"index.html":{}}}],["sopra",{"_index":815,"title":{},"body":{"index.html":{}}}],["sostituir",{"_index":1124,"title":{},"body":{"index.html":{}}}],["sostituira",{"_index":1113,"title":{},"body":{"index.html":{}}}],["sostituire",{"_index":816,"title":{},"body":{"index.html":{}}}],["sostituzione",{"_index":826,"title":{},"body":{"index.html":{}}}],["sotto",{"_index":1038,"title":{},"body":{"index.html":{}}}],["sottocartelle",{"_index":1105,"title":{},"body":{"index.html":{}}}],["sottoposta",{"_index":876,"title":{},"body":{"index.html":{}}}],["sottoscrittori",{"_index":1005,"title":{},"body":{"index.html":{}}}],["sottoscriversi",{"_index":951,"title":{},"body":{"index.html":{}}}],["spec\\.ts",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specializza",{"_index":854,"title":{},"body":{"index.html":{}}}],["specializzare",{"_index":671,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.ts",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/example/example.component.ts",{"_index":204,"title":{},"body":{"components/ExampleComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sta",{"_index":873,"title":{},"body":{"index.html":{}}}],["staccato",{"_index":939,"title":{},"body":{"index.html":{}}}],["stampato",{"_index":1050,"title":{},"body":{"index.html":{}}}],["standard",{"_index":988,"title":{},"body":{"index.html":{}}}],["stando",{"_index":719,"title":{},"body":{"index.html":{}}}],["stanno",{"_index":934,"title":{},"body":{"index.html":{}}}],["start",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":647,"title":{"index.html":{}},"body":{}}],["startup",{"_index":734,"title":{},"body":{"index.html":{}}}],["static",{"_index":288,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{}}}],["stations/station",{"_index":274,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["stato",{"_index":871,"title":{},"body":{"index.html":{}}}],["stessa",{"_index":838,"title":{},"body":{"index.html":{}}}],["stesse",{"_index":907,"title":{},"body":{"index.html":{}}}],["stesso",{"_index":803,"title":{},"body":{"index.html":{}}}],["stoppare",{"_index":910,"title":{},"body":{"index.html":{}}}],["stoptracesizewindow",{"_index":544,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["storable",{"_index":849,"title":{},"body":{"index.html":{}}}],["storicizzazione",{"_index":690,"title":{},"body":{"index.html":{}}}],["streamdata",{"_index":489,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["string",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{}}}],["stringhe",{"_index":754,"title":{},"body":{"index.html":{}}}],["struttura",{"_index":1099,"title":{},"body":{"index.html":{}}}],["stub",{"_index":1102,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["su",{"_index":720,"title":{},"body":{"index.html":{}}}],["sua",{"_index":701,"title":{},"body":{"index.html":{}}}],["subject",{"_index":297,"title":{},"body":{"modules/PlCoreModule.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["sue",{"_index":750,"title":{},"body":{"index.html":{}}}],["sulla",{"_index":665,"title":{},"body":{"index.html":{}}}],["suo",{"_index":1201,"title":{},"body":{"index.html":{}}}],["support",{"_index":1207,"title":{},"body":{"modules.html":{}}}],["supporto",{"_index":650,"title":{},"body":{"index.html":{}}}],["svg",{"_index":360,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{},"modules.html":{}}}],["svg2file",{"_index":336,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["svg2file(elementsvg",{"_index":395,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["svgelement",{"_index":405,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["svgtoimage",{"_index":337,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["svgtoimage(svgelement",{"_index":397,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["sviluppatore",{"_index":656,"title":{},"body":{"index.html":{}}}],["sviluppo",{"_index":1084,"title":{},"body":{"index.html":{}}}],["t",{"_index":221,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["tag",{"_index":370,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["tagcache",{"_index":412,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["tail",{"_index":942,"title":{},"body":{"index.html":{}}}],["tailajxcall(idajax:string",{"_index":965,"title":{},"body":{"index.html":{}}}],["tali",{"_index":774,"title":{},"body":{"index.html":{}}}],["tanto",{"_index":668,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["tempo",{"_index":894,"title":{},"body":{"index.html":{}}}],["termina",{"_index":796,"title":{},"body":{"index.html":{}}}],["terminare",{"_index":298,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["terminate",{"_index":776,"title":{},"body":{"index.html":{}}}],["terminazione",{"_index":972,"title":{},"body":{"index.html":{}}}],["termine",{"_index":805,"title":{},"body":{"index.html":{}}}],["test",{"_index":209,"title":{},"body":{"components/ExampleComponent.html":{}}}],["testsubscribe",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alertservice.enablealertmessage(false",{"_index":1177,"title":{},"body":{"index.html":{}}}],["this.httpservice.getfile(plhttprequest",{"_index":785,"title":{},"body":{"index.html":{}}}],["this.httpservice.post(environment.http.api.mock.url",{"_index":980,"title":{},"body":{"index.html":{}}}],["this.progressservice.showqueuedownload(\".test",{"_index":927,"title":{},"body":{"index.html":{}}}],["thread",{"_index":228,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["throw",{"_index":969,"title":{},"body":{"index.html":{}}}],["tipo",{"_index":439,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["title",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["torna",{"_index":386,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["tour",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["tracciare",{"_index":642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trace",{"_index":997,"title":{},"body":{"index.html":{}}}],["tracesizewindow",{"_index":545,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["tramite",{"_index":693,"title":{},"body":{"index.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["trova",{"_index":913,"title":{},"body":{"index.html":{}}}],["true",{"_index":813,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["truncateurlcache",{"_index":1058,"title":{},"body":{"index.html":{}}}],["truncateurlifnoparams",{"_index":1057,"title":{},"body":{"index.html":{}}}],["try",{"_index":966,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["tutte",{"_index":920,"title":{},"body":{"index.html":{}}}],["tutti",{"_index":680,"title":{},"body":{"index.html":{}}}],["tutto",{"_index":662,"title":{},"body":{"index.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"miscellaneous/functions.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["type?issubmenu=1",{"_index":275,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["ulteriori",{"_index":695,"title":{},"body":{"index.html":{}}}],["un",{"_index":227,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["un'immagine",{"_index":344,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["una",{"_index":843,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{}}}],["uno",{"_index":710,"title":{},"body":{"index.html":{}}}],["unsubscriber",{"_index":1010,"title":{},"body":{"index.html":{}}}],["uono",{"_index":709,"title":{},"body":{"index.html":{}}}],["upload",{"_index":320,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["upload/download",{"_index":976,"title":{},"body":{"index.html":{}}}],["url",{"_index":202,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"index.html":{}}}],["usata",{"_index":352,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["user",{"_index":1044,"title":{},"body":{"index.html":{}}}],["user=json.changevaluesbykey(user,\"cognome\",\"piciollo",{"_index":1048,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":889,"title":{},"body":{"index.html":{}}}],["uso",{"_index":1203,"title":{},"body":{"index.html":{}}}],["utile",{"_index":235,"title":{},"body":{"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"index.html":{}}}],["utili",{"_index":773,"title":{},"body":{"index.html":{}}}],["utilit",{"_index":306,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["utilita",{"_index":760,"title":{},"body":{"index.html":{}}}],["utilizzabile",{"_index":496,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["utilizzare",{"_index":261,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["utilizzate",{"_index":1054,"title":{},"body":{"index.html":{}}}],["utilizzato",{"_index":670,"title":{},"body":{"index.html":{}}}],["utils",{"_index":9,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"components/PlProgressComponent.html":{},"injectables/PlProgressService.html":{},"injectables/PlUtilsService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["utils.service.ts",{"_index":542,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["uuid",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":1056,"title":{},"body":{"index.html":{}}}],["validi",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validit",{"_index":1183,"title":{},"body":{"index.html":{}}}],["valido",{"_index":895,"title":{},"body":{"index.html":{}}}],["valore",{"_index":251,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["valori",{"_index":817,"title":{},"body":{"index.html":{}}}],["valorizzare",{"_index":455,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["valorizzata",{"_index":457,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["valorizzazione",{"_index":437,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"injectables/PLWorkerService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vanno",{"_index":1053,"title":{},"body":{"index.html":{}}}],["var",{"_index":61,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"components/PlProgressComponent.html":{}}}],["variabile",{"_index":317,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["variabili",{"_index":1110,"title":{},"body":{"index.html":{}}}],["variables",{"_index":1213,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varie",{"_index":677,"title":{},"body":{"index.html":{}}}],["vecchie",{"_index":652,"title":{},"body":{"index.html":{}}}],["vede",{"_index":928,"title":{},"body":{"index.html":{}}}],["vedere",{"_index":1168,"title":{},"body":{"index.html":{}}}],["velocizzare",{"_index":765,"title":{},"body":{"index.html":{}}}],["vengono",{"_index":1000,"title":{},"body":{"index.html":{}}}],["verificasse",{"_index":824,"title":{},"body":{"index.html":{}}}],["verr",{"_index":897,"title":{},"body":{"index.html":{}}}],["verranno",{"_index":367,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["versione",{"_index":1190,"title":{},"body":{"index.html":{}}}],["verso",{"_index":879,"title":{},"body":{"index.html":{}}}],["via",{"_index":836,"title":{},"body":{"index.html":{}}}],["viene",{"_index":294,"title":{},"body":{"modules/PlCoreModule.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["viewchild('dialog",{"_index":43,"title":{},"body":{"components/AlertComponent.html":{}}}],["virtualizzare",{"_index":226,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["virtualizzazione",{"_index":736,"title":{},"body":{"index.html":{}}}],["visualizzata",{"_index":759,"title":{},"body":{"index.html":{}}}],["visualizzazione",{"_index":919,"title":{},"body":{"index.html":{}}}],["vita",{"_index":1002,"title":{},"body":{"index.html":{}}}],["voglia",{"_index":1081,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/ExampleComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"components/PlProgressComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["vuole",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["welcome",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["window",{"_index":104,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["window.alert",{"_index":1199,"title":{},"body":{"index.html":{}}}],["worker",{"_index":259,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["worker.service.ts",{"_index":212,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["workerfunction",{"_index":223,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["y",{"_index":993,"title":{},"body":{"index.html":{}}}],["yes",{"_index":243,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlHttpService.html":{},"injectables/PlProgressService.html":{}}}],["zone.js",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/pl-core-utils-library/src/lib/component/alert/alert.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert\n            \n\n            \n                styleUrls\n                ./alert.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                            \n                                    Public\n                                messageInfo\n                            \n                            \n                                    Public\n                                queueMessageInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n\n\n            \n                \n                    funzionalità per la chiusura della modale\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dialog')\n                            \n                        \n                    \n\n                \n                    \n                        riferimento al modale html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messageInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n                \n                    \n                        messaggio corrente processato dalla coda\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queueMessageInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        contenitore di messaggi\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{messageInfo.title || \\'Message!\\'}}                  ×                              {{messageInfo.body }}                    Ok            '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'PlProgressComponent', 'selector': 'lib-progress'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/component/alert/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                enableAlertMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAlertMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAlertMessage(enable: boolean)\n                \n            \n\n\n\n\n            \n                \n                    funzionalità per disabilitare il componente e ripristinare alert() nativo messo a disposizione da window.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                file1\n                            \n                            \n                                file2\n                            \n                            \n                                json\n                            \n                            \n                                    Public\n                                numbers\n                            \n                            \n                                    Public\n                                plHttpService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileChange1\n                            \n                            \n                                onFileChange2\n                            \n                            \n                                prova\n                            \n                            \n                                testSubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ambientModeLoaderService: PlUtilsService, progressService: PlProgressService, modalService: NgbModal, plHttpService: PlHttpService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ambientModeLoaderService\n                                                  \n                                                        \n                                                                        PlUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        progressService\n                                                  \n                                                        \n                                                                        PlProgressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plHttpService\n                                                  \n                                                        \n                                                                        PlHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileChange1\n                        \n                        \n                    \n                \n            \n            \n                \nonFileChange1(event)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileChange2\n                        \n                        \n                    \n                \n            \n            \n                \nonFileChange2(event)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prova\n                        \n                        \n                    \n                \n            \n            \n                \nprova()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @PLDelay(6000)\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            testSubscribe\n                        \n                        \n                    \n                \n            \n            \n                \ntestSubscribe()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PLFormatDate(undefined)\n                            \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            file1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file2\n                            \n                        \n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            json\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    \"release_version\": \"3.8.20\",\n    \"build\": {\n      \"custom_image\": false,\n      \"custom_image_version\": \"1.0\",\n      \"json\": {\n        \"release_version\": \"3.8.20\",\n        \"build\": {\n          \"custom_image\": false,\n          \"custom_image_version\": \"1.0\",\n          \"arr\": [1, 2, 3, 4, 5, 6]\n\n        },\n        \"pre_deploy\": {\n          \"custom_image\": false,\n          \"custom_image_version\": \"1.0\"\n        },\n        \"post_deploy\": {\n          \"custom_image\": false,\n          \"custom_image_version\": \"1.0\"\n        }\n      }\n\n    },\n    \"pre_deploy\": {\n      \"custom_image\": false,\n      \"custom_image_version\": \"1.0\"\n    },\n    \"post_deploy\": {\n      \"custom_image\": false,\n      \"custom_image_version\": \"1.0\"\n    }\n  }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 12345678.1111\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PLNumberFormat(FORMAT_NUMBER.IT)\n                            \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plHttpService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlHttpService\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Welcome to {{ title }}!    Here are some links to help you start:       Tour of Heroes        CLI Documentation        Angular blog  {{data}}  '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'PlProgressComponent', 'selector': 'lib-progress'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nAppModule -->\n\nExampleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nPlCoreModule\n\nPlCoreModule\n\nAppModule -->\n\nPlCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ExampleComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ExampleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PlCoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheEntry.html":{"url":"interfaces/CacheEntry.html","title":"interface - CacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheEntry\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-cache-map.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entryTime\n                                \n                                \n                                        response\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entryTime\n                                    \n                                \n                                \n                                    \n                                        entryTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/example/example.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-example\n            \n\n            \n                styleUrls\n                ./example.component.css\n            \n\n\n\n            \n                templateUrl\n                ./example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Test  CANCEL  OK'\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'PlProgressComponent', 'selector': 'lib-progress'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PLWorkerService.html":{"url":"injectables/PLWorkerService.html","title":"injectable - PLWorkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PLWorkerService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-worker.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Public\n                                runUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            run\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    run(workerFunction: (input: any) => void, nameThred: string, initProcess: (undefined) => void, data?: any, singolInstance: boolean)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    workerFunction\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : promise da virtualizzare in un thread separato ..   non accetta arrow function\n\n                                    \n                                \n                                \n                                    nameThred\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : nome da assegnare al thread, utile per i log.\n\n                                    \n                                \n                                \n                                    initProcess\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : funzione richiamata al momento della partezza del processo ..   non accetta arrow function \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : oggetto contenente i parametri da passare alla funzione workerFunction, in caso di piu parametri , passare un JSON\n\n                                    \n                                \n                                \n                                    singolInstance\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : valore booleano che indica se occorre creare un nuovo worker oppure utilizzare il gia presente, in caso fosse gia in esecuzione\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            runUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    runUrl(url: string, data?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlAmbientModeLoaderService.html":{"url":"injectables/PlAmbientModeLoaderService.html","title":"injectable - PlAmbientModeLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlAmbientModeLoaderService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-ambient-mode.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                browserIdentify\n                            \n                            \n                                detect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            browserIdentify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    browserIdentify()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         BROWSER\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detect\n                        \n                        \n                    \n                \n            \n            \n                \ndetect()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlCacheMapService.html":{"url":"injectables/PlCacheMapService.html","title":"injectable - PlCacheMapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlCacheMapService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-cache-map.service.ts\n        \n\n            \n                Description\n            \n            \n                stations/station-type?isSubMenu=1\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, res: HttpResponse)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlCoreModule.html":{"url":"modules/PlCoreModule.html","title":"module - PlCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PlCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlCoreModule\n\n\n\ncluster_PlCoreModule_declarations\n\n\n\ncluster_PlCoreModule_providers\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nPlCoreModule\n\nPlCoreModule\n\nPlCoreModule -->\n\nAlertComponent->PlCoreModule\n\n\n\n\n\nPlProgressComponent\n\nPlProgressComponent\n\nPlCoreModule -->\n\nPlProgressComponent->PlCoreModule\n\n\n\n\n\nPlAmbientModeLoaderService\n\nPlAmbientModeLoaderService\n\nPlCoreModule -->\n\nPlAmbientModeLoaderService->PlCoreModule\n\n\n\n\n\nPlHttpInterceptorMockService\n\nPlHttpInterceptorMockService\n\nPlCoreModule -->\n\nPlHttpInterceptorMockService->PlCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/pl-core-utils-library.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertComponent\n                        \n                        \n                            PlProgressComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AlertComponent\n                        \n                        \n                            PlProgressComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PlAmbientModeLoaderService\n                        \n                        \n                            PlHttpInterceptorMockService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Routing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Routing()\n                \n            \n\n\n\n\n            \n                \n                    funzionalità per il reperimento del'intercettore di rotta.. in caso di NavigationStart, viene lanciato questo \nsubject. utile per terminare le richieste http\n\n\n                    \n                        Returns :     { getIinterrupt(): any; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlCoreUtils.html":{"url":"classes/PlCoreUtils.html","title":"class - PlCoreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlCoreUtils\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/pl-core-utils-library.service.ts\n        \n\n            \n                Description\n            \n            \n                classe di utilità, è possibile risalire alla lista delle progressbar e alla registrazione di eventi\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                progressBars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Broadcast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            progressBars\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         progressBarsInterface\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n                \n                    \n                        variabile contenente le progress di ajax down e upload \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Broadcast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Broadcast()\n                \n            \n\n\n\n\n            \n                \n                    metodi per il lancio di eventi , registrazione e cancellazione degli seìtesi .. \n\n\n                    \n                        Returns :     { execEvent(event: any, object: any): void; listenEvent(event: any, callBack: any): void; removeL...\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlGraphicService.html":{"url":"injectables/PlGraphicService.html","title":"injectable - PlGraphicService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlGraphicService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-graphic.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canvasToImg\n                            \n                            \n                                    Public\n                                dom2jpeg\n                            \n                            \n                                    Public\n                                domToCanvas\n                            \n                            \n                                    Public\n                                image2base64\n                            \n                            \n                                    Public\n                                svg2File\n                            \n                            \n                                    Public\n                                svgToImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plHttpService: PlHttpService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plHttpService\n                                                  \n                                                        \n                                                                        PlHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canvasToImg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canvasToImg(canvas: HTMLElement)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che si occupa di scaricare un'immagine da un contenitore canvas, il canvas deve contenere un immagine non un html.\nquesta funzionalità puo essere usata in risposta a domToCanvas\nviene ritornata la URL del blob da poeter scaricare\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :oggetto canvas da scaricare   \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dom2jpeg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dom2jpeg(elementSVG: HTMLElement)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elementSVG\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        elemento SVG dom da cattuare\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            domToCanvas\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    domToCanvas(elementoDom: HTMLElement, call: (canvas: HTMLElement) => void)\n                \n            \n\n\n\n\n            \n                \n                    Funzione per la creazione del canvas, contenente l'immagine del DOM referenziato. non verranno presi in considerazione\ntag SVG grafici. ma solo html semplice comprese le immagini\nla funzione restituisce in callback il canvas creato, in modo da poterlo aggiungere al dom o altro.\nmentre in observer torna la url da passare alla funaione di download\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elementoDom\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : elemento dom da cattuare\n\n                                    \n                                \n                                \n                                    call\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : callback di ritorno dove iniettare il canvas creato.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            image2base64\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    image2base64(imageUrl: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            svg2File\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    svg2File(elementSVG: HTMLElement, nameFIle: string)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementSVG\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameFIle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            svgToImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    svgToImage(svgElement: HTMLElement, call: (undefined) => void)\n                \n            \n\n\n\n\n            \n                \n                    Funzionalita per la creazione di un immagine a partire da un svg. la funzione restituisce in callback un canvas eventualmente\nda mostrare a schermo e la url  del file in formato blob nell'osservable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    svgElement\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : svg element del dom\n\n                                    \n                                \n                                \n                                    call\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/PlHttpInterceptorMockService.html":{"url":"interceptors/PlHttpInterceptorMockService.html","title":"interceptor - PlHttpInterceptorMockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  PlHttpInterceptorMockService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/interceptor/pl-interceptor-mock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pathMock: string, tagCache: string)\n                    \n                \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pathMock\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagCache\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlHttpRequest.html":{"url":"classes/PlHttpRequest.html","title":"class - PlHttpRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlHttpRequest\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/bean/Pl-http-request.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    body\n                                \n                                \n                                    service\n                                \n                                \n                                    queryParams\n                                \n                                \n                                    pathParams\n                                \n                                \n                                    url\n                                \n                                \n                                    method\n                                \n                                \n                                    mocked\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(objectService: literal type, pathParams: JSON, queryParams: JSON, body: JSON)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pathParams\n                                                  \n                                                        \n                                                                    JSON\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    JSON\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    JSON\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n                    \n                        \n                                ritorna il body da passare a servizi come POST\n\n\n                        \n                    \n\n                \n                    \n                        setbody(object: any)\n                    \n                \n                    \n                        \n                                valorizzazione del body da passare a chiamate di tipo POST ad esempio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n\n                \n                    \n                        setservice(object: literal type)\n                    \n                \n                    \n                        \n                                ogetto raffigurante i parametri base del servizio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        queryParams\n                    \n                \n\n                \n                    \n                        getqueryParams()\n                    \n                \n                    \n                        \n                                ritorna l'oggetto contenente i query params da passare al servizio\n\n\n                        \n                    \n\n                \n                    \n                        setqueryParams(object)\n                    \n                \n                    \n                        \n                                oggetto contenete i parametri da passare in query string per chiamate GET ad esempio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        pathParams\n                    \n                \n\n\n                \n                    \n                        setpathParams(object)\n                    \n                \n                    \n                        \n                                oggetto contenente i path params per valorizzare la url\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                    \n                        \n                                ritorna la url, valorizzata con in path params passati, in caso non siano presenti\nviene passassata la url senza essere riadattata.\n\n\n                        \n                    \n\n                \n                    \n                        seturl(url: string)\n                    \n                \n                    \n                        \n                                viene valorizzata la url da richiamare\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                    \n                        \n                                ritorna il metodo invocato\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mocked\n                    \n                \n\n                \n                    \n                        getmocked()\n                    \n                \n                    \n                        \n                                indica se il servizio è un mock oppure no\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlHttpService.html":{"url":"injectables/PlHttpService.html","title":"injectable - PlHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlHttpService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-http.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                DELETE\n                            \n                            \n                                DOWNLOAD\n                            \n                            \n                                DOWNLOADURL\n                            \n                            \n                                FORKJOIN\n                            \n                            \n                                GET\n                            \n                            \n                                PATCH\n                            \n                            \n                                POST\n                            \n                            \n                                PUT\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DELETE\n                        \n                        \n                    \n                \n            \n            \n                \nDELETE(plttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (undefined) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DOWNLOAD\n                        \n                        \n                    \n                \n            \n            \n                \nDOWNLOAD(streamData: ArrayBuffer, contentType: CONTENT_TYPE | string, fileName?: string)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    streamData\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DOWNLOADURL\n                        \n                        \n                    \n                \n            \n            \n                \nDOWNLOADURL(url: string, filename: string)\n                \n            \n\n\n\n\n            \n                \n                    l.piciollo\nsi occupa di effettuare il download di un file contenuta nel blob creato con le altre funzionalità\nfunzionalità utilizzabile in combinazione con le funzione di creazione image o file\nè possibile effettuare anche il download di un file in rete, passando il link al file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : url del blob\n\n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"download_temp\"\n                                    \n\n                                    \n                                        : nome file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            FORKJOIN\n                        \n                        \n                    \n                \n            \n            \n                \nFORKJOIN(plttpRequest: Array, interrupt?: Subject)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plttpRequest\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GET\n                        \n                        \n                    \n                \n            \n            \n                \nGET(plttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (undefined) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PATCH\n                        \n                        \n                    \n                \n            \n            \n                \nPATCH(plttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (undefined) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            POST\n                        \n                        \n                    \n                \n            \n            \n                \nPOST(plttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (undefined) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PUT\n                        \n                        \n                    \n                \n            \n            \n                \nPUT(plttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (undefined) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlNetworkService.html":{"url":"injectables/PlNetworkService.html","title":"injectable - PlNetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlNetworkService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-network.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLocalHttpHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLocalHttpHeaders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocalHttpHeaders()\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlProgressComponent.html":{"url":"components/PlProgressComponent.html","title":"component - PlProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlProgressComponent\n\n\n\n        \n            Info\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/pl-core-utils-library/src/lib/component/progress/pl-progress.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-progress\n            \n\n            \n                styleUrls\n                ./pl-progress.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pl-progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                injector\n                            \n                            \n                                    Public\n                                interrupted\n                            \n                            \n                                    Public\n                                percent\n                            \n                            \n                                    Public\n                                plCoreUtils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                getProgress\n                            \n                            \n                                interrupt\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, injector: Injector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProgress\n                        \n                        \n                    \n                \n            \n            \n                \ngetProgress()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            interrupt\n                        \n                        \n                    \n                \n            \n            \n                \ninterrupt(obj)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            interrupted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plCoreUtils\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PlCoreUtils\n                        \n                    \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Downloading list..      ×                         Url: {{plCoreUtils.progressBars[progress].url}}                                       {{plCoreUtils.progressBars[progress].percent}}%                                                                      Size: {{plCoreUtils.progressBars[progress].size}}                                       Downloaded: {{plCoreUtils.progressBars[progress].loaded}}                                       ×                                                      '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'PlProgressComponent', 'selector': 'lib-progress'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlProgressService.html":{"url":"injectables/PlProgressService.html","title":"injectable - PlProgressService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlProgressService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/component/progress/pl-progress.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                showQueueDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showQueueDownload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showQueueDownload(container?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbModalRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlUtilsService.html":{"url":"injectables/PlUtilsService.html","title":"injectable - PlUtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlUtilsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-utils.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                binaryFind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                stopTraceSizeWindow\n                            \n                            \n                                    Public\n                                traceSizeWindow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTraceSizeWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTraceSizeWindow()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            traceSizeWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    traceSizeWindow()\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            binaryFind\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (input: any): Promise {\n    return new Promise((ok, ko) => {\n      let minIndex = 0;\n      let maxIndex = input.arr.length - 1;\n      let currentIndex;\n      let currentElement;\n      while (minIndex  input.searchElement) {\n          maxIndex = currentIndex - 1;\n        } else {\n          ok(currentIndex);\n          return currentIndex;\n        }\n      }\n      ok(-1);\n      return -1;\n    })\n  }\n                        \n                    \n\n                \n                    \n                        \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @ng-bootstrap/ng-bootstrap : ^4.2.1\n        \n            angular2-uuid : ^1.1.1\n        \n            bootstrap : ^4.3.1\n        \n            chart.js : ^2.9.3\n        \n            chartjs-plugin-annotation : ^0.5.7\n        \n            core-js : ^2.5.4\n        \n            gulp-sass : ^3.1.0\n        \n            html-to-image : ^0.1.1\n        \n            html2canvas : ^1.0.0-rc.5\n        \n            jquery : ^3.5.1\n        \n            jquery-dialog : ^0.5.2\n        \n            popper.js : ^1.16.0\n        \n            rx : ^4.1.0\n        \n            rxjs : ~6.3.3\n        \n            rxjs-operators : ^1.1.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AmbientModeProviderFactory   (projects/.../AmbientModeProvider.ts)\n                        \n                        \n                            PLDelay   (projects/.../decordator.ts)\n                        \n                        \n                            PLFormatDate   (projects/.../decordator.ts)\n                        \n                        \n                            PLNumberFormat   (projects/.../decordator.ts)\n                        \n                        \n                            PLPermission   (projects/.../decordator.ts)\n                        \n                        \n                            PLTraceHooks   (projects/.../decordator.ts)\n                        \n                        \n                            PLTraceMethod   (projects/.../decordator.ts)\n                        \n                        \n                            PLUnsubscribe   (projects/.../decordator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/pl-core-utils-library/src/lib/initializer/AmbientModeProvider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AmbientModeProviderFactory\n                        \n                        \n                    \n                \n            \n            \n                \nAmbientModeProviderFactory(ambientModeService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ambientModeService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/pl-core-utils-library/src/lib/decorator/decordator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PLDelay\n                        \n                        \n                    \n                \n            \n            \n                \nPLDelay(milliseconds)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    milliseconds\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLFormatDate\n                        \n                        \n                    \n                \n            \n            \n                \nPLFormatDate(format, local: string, localeId: string)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    local\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \nPLNumberFormat(format)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    format\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :FORMAT_NUMBER|dstring  indica il formato di numero che si vuole ricevere Es. it_IT  \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        String format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLPermission\n                        \n                        \n                    \n                \n            \n            \n                \nPLPermission(enabled)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enabled\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLTraceHooks\n                        \n                        \n                    \n                \n            \n            \n                \nPLTraceHooks(disabled)\n                \n            \n\n\n\n\n            \n                \n                    \n/**\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    disabled\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Array cicli kook da non tracciare nei log \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLTraceMethod\n                        \n                        \n                    \n                \n            \n            \n                \nPLTraceMethod()\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLUnsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nPLUnsubscribe(ignore: [])\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignore\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWelcome to pl-core-utils-library!\nLibreria core di supporto per nuove e vecchie applicazioni, si occupa di esporre allo sviluppatore, diversi servizi gia pronti e collaudati che si occupano di gestire tutto il flusso di controllo sulla navigazione di pagine, servizi di rete e tanto altro come intercettare il browser utilizzato e di specializzare altre funzionalità eventualmente mancanti per il tipo di browser. All'interno del pacchetto è presente la documentazione che illustra le varie funzionalità del pacchetto.\nFeature\n\nServizi di rete per chiamte ajax, tutti i metodi esposti possono essere dismessi, in modo da non lasciare appese le chiamate ajax come ad esempio il cambio di rotta applicativo, o altro.\n\nservizio di cache di rete, viene gestita in autonomia la storicizzazione della cache per le chiamate configurate. è possibilità tramite questo servizio risalire alla cache evitando ulteriori chiamate al BE\n\ncomponente per la mostra delle progressioni o avanzamenti in atto, richiamando la sua apertura è possibile risalire a tutti i processi background al mmomento attivi e killare la loro esecuzione uono ad uno\n\nServizio di intercettazione del browser, è in grado di innescare il processo di autenticazione del sistema ospitante e installare funzionalita aggiuntive in base al sistema. Ad esempio stando su IE viene adattato il meccanismo di download dei file,in quanto il comportamento è diverso da browser in browser\n\nSupporto per il blocco browser dichiarati non compatibili, il blocco viene automaticamente al momento dello startup applicativo\n\nAggiunto supporto per virtualizzazione di processo complesso. Possibilita di virtualizzare i processi pesanti in modo che non impattano le performance applicative\n\nAggiunte funzionalita grafiche, come screenshot della pagina\n\nAggiunto sistema di intercettazione realtime per il controllo della dimensione della pagina, per identificare le sue dimensioni\n\nInserimento automatido di nuove funzionalità per le stringhe, array e json\n\nServizio per reperire informazioni dall'header della pagina correntemente visualizzata.\n\nClasse di utilita per funzionalità come la ricerca binaria\n\nAggiunti decoratori di utilità per velocizzare processi di conversione o inibizione dei component DOM\n\nServizio di Mock, possibilità di eseguire in autonomina simulazioni di chiamata alla rete\n\n\nChiamate HTTP\nIl sistema viene equipagiato con servizi utili per le chiamate al BE, tali chiamate hanno la possibilità di essere terminate in caso di determinati eventi\ncallMock(p1: any, p2: any): Observable {\n    return new Observable(obs => {\n        let plHttpRequest: PlHttpRequest = new PlHttpRequest(\n            environment.http.api.mock,\n            Object({ api: \"api\", files: \"files\" }),\n            Object({ api: p1, files: p2 }),\n            null);\n    this.httpService.GETFILE(plHttpRequest, RESPONSE_TYPE.ARRAYBUFFER, (idAjax => {\n        setTimeout((id) => {\n           PlCoreUtils.progressBars[id].interrupt.next(true);\n        }, 10,idAjax);\n    }), null).subscribe(sb => {\n    obs.next(sb);\n    obs.complete()\n    }, error => {\n        obs.error(error);\n    }, () => { })\n    })\n}in questo esempio si termina il servizio dopo 10 millisecondi, ovviamente in caso di un download di file, questo termina lo scaricamento dello stesso. L'evento di termine puo essere anche avviato diversamente, tramite un pulsante ad esempio.\nE' possibile dichiarare url contenenti dei pathParams, il sistema provvederò in autonomia alla sua valorizzazione.\nmock: {\n    url: \"@cacable@/example/:api/:files\",\n    mocked: true,\n    method:\"GET\"\n}passando l'oggetto sopra al plHttpRequest, questo provvederà in autonomia a sostituire i valori dei parametri, con ad esempio \"api e \"files\"\nlet plHttpRequest: PlHttpRequest = new PlHttpRequest(\n    environment.http.api.mock,\n    Object({ api: \"api\", files: \"files\" }),\n    Object({ api: p1, files: p2 }),\n    null);\nsi avverte che le chiavi dell'oggetto contenente i valori da impostare nei pathparams, deve essere lo stesso del pathparam stesso con l'esclusione dei \":\", in caso non si verificasse questo match.. la sostituzione non avverà, con la conseguente mal formattazione della URL.\n\nEsempio abilitazione cache delle chiamate di rete\nil sistema come gia detto mette a disposizione anche un servizio di cache, per evitare appesantimenti di rete, per via di chiamate repentine al BE che hanno stessa request ed ovviamente stessa response. per la configurazione della cache è opportuno inserire una semplice annotazione nella url del servizio.\n/**\n    @author l.piciollo\n    si riporta un esempio di una api riconosciuta come storable, grazie al tag @cacable@ presente nella URL.\n    si nota come i parametri sono passati con {0} e {1}.. il sistema è equipagiato da una funzionalita che specializza\n    le stringhe ad avere il format function.. quindi .. è possibile formattare la url richimandola in questo modo:\n    E.S.\n    let url = environment.exampleApi.format(\"P1\",\"P2\")\n    quindi avviene una formattazione per posizione dei paraetri..\n    exampleApi: `@cacable@/example/cacable/api?param1={0}&param2={1}`\n*/\nexampleApi: `@cacable@/example/cache/api?param1={0}&param2={1}`,\nexampleApeNoCache: `example/no/cache/api?param1={0}&param2={1}`\ncome si può notare, alla url è stato anteposto il @cacable@ , questo sta ad indicare che la url dovrà essere sottoposta al motore di cache sia in chiamata verso la rete che in risposta verso il client.\n\n\ndi default il tag da inserire è @cacable , si puo sostituire con qualsiasi valore, configurando opportunamente il servizio nel modulo di avvio dell'applicazione.\n\n{ provide: MAX_CACHE_AGE, useValue: 300000 },\n{ provide: CACHE_TAG, useValue: \"@cachable@\" }\n\ncome per il tag, è possibile anche configurare il tempo valido per la cache.. scaduto il tempo la chiamata verrà eliminata dalla cache in modo da poter poi richiedere al BE nuovi aggiornamenti\n\nApertura progress bars\nE' stato realizzato un sistema di accodamento delle chiamate al BE, le stesse possono essere monitorate nella loro progressione oppure stoppare la loro esecuzione.\n\nquesta funzionalità è utile ovviamente in caso di chiamate a download o upload file, in quanto possono compiere diverso tempo.. per le chiamate \"semplici\", ovviamente non trova giovamento questa utilità.\n\nci sono due modi per mostrare le progress bar\n\nVisualizzazione di tutte le progressioni messe in coda\n\nVisualizzazione della singola chiamata\n\n\nPer la visualizzazione di tutte le code, è opportuno invocare il seguente comando\nthis.progressService.showQueueDownload(\".test\");\n\ncome si vede, occorre passare una class css la quale serve per rintracciare il contenitore dove inserire la finestra che mostra le progress bar.\n\n\ntutte le chiamate che stanno ancora in esecuzione, mostrano un pulsante di annullamento della stessa chiamata.\n\nper la visualizzazione di una singola chiamata.. occorre risalire all'id staccato dal sistema al momento della chiamata al BE e mettersi in tail sulla progressione. Quindi è possibile creare due funzioni di utilità che si occupano di registrarsi agli eventi di progressione, e al kill della sua esecuzione.\n/**\n    @author l.piciollo\n    funzionlita per rimanere in ascolto su una progressione di chiamata al be.. utile per risalire allo stato di chiamate al BE\n    per il caricamento/scaricamento file. la funzione ritorna un Subject... dove possibile sottoscriversi per icevere i dati\n    in modalità realtime. utile per costruire barre di progressione a runtime.\n    @param IDAjax : id della chiamata ajax precedentemente chiamata, l'id viene restituido dalla callback in ingresso alle chiamate\n*/\n\nTAILAJXCALL(IDAjax:string): any {\n     try {\n        return PlCoreUtils.progressBars[IDAjax].changed;\n     } catch (error) {\n        throw new ErrorBean(error.message, ErrorCode.SYSTEMERRORCODE, false, true)\n    }\n}\n\n/********************************************************************************************************************/\n\n/**\n    @author l.piciollo\n    funzionalità per la terminazione di una chiamata di rete che magari prende piu tempo del previsto.. passando in ingresso l'id AJAX\n    staccato al momento della chiamata è utile per killare upload/download file.\n    @param IDAjax : id della chiamata ajax precedentemente chiamata, l'id viene restituido dalla callback in ingresso alle chiamate\n*/\n\nKILLAJXCALL(IDAjax:string) {\n    try {\n        PlCoreUtils.progressBars[IDAjax].interrupt.next(true);\n    } catch (error) {\n        throw new ErrorBean(error.message, ErrorCode.SYSTEMERRORCODE, false, true)\n    }\n}per registrarsi è possibile procedere in questo modo\n/**\n    @author l.piciollo\n    esempio di chiamata http\n*/\n\ncallMock(p1: any, p2: any): Observable {\n    return new Observable(obs => {\n        this.httpService.POST(environment.http.api.mock.url, {},null, (idAjax)=>{\n            PlCoreUtils.progressBars[IDAjax].changed.subscribe(info=>{\n            console.log(info)\n        })\n        }, null, environment.http.api.mock.mock).subscribe(sb => {\n            obs.next(sb);\n            obs.complete()\n        }, error => {\n            obs.error(error);\n        }, () => { })\n        })\n    }\n}\nallo stesso modo è possibile stoppare la chiamata al servizio nel seguente modo\n\nPlCoreUtils.progressBars[IDAjax].interrupt.next(true);\nEsempi decoratori\n/**\n    conversione automatica della data il campo prendera\n    automaticamente il formato standard FULLDATE >> 'EEEE, MMMM d, y'\n*/\n@PLFormatDate(FORMAT_DATE.FULLDATE)\nprivate campoData: Date = new Date()\n\n\n/**\n    abilitazione del trace log dei cicli di hook delle classi,\n    vengono loggati tutti i cicli di vita del componente\n*/\n@PLTraceHooks( )\nexport class AppComponent\n\n/**\n    eliinatzione dei sottoscrittori in modo automatico al momento del'ondestroy\n    del componente,in questo modo di hanno gli unsubscriber automatici di tutti i\n    sottoscrittori creati per quel componente . E' possibile elencare gli osservatori da non\n    prendere in considerazione\n*/\n@PLUnsubscribe(ignore = [])\nexport class AppComponent\n\n/**\n    decoratore configurabile, se attivato, inibisce la creazione di componenti DOM in base a\n    dei parametri lanciare\n    document.dispatchEvent(new CustomEvent('PL:SET-PERMISSION', { detail\n    [PROFILO1,PROFILO2,PROFILO3,...] }));\n    inserire nel DOM \"\n    e al decoratore passare @PLPermission(true)\n    l'elemento del dom viene elininato in quanto non contiene il permesso READONLY.\n*/\n\n@PLPermission(environment.production)\nexport class AppComponent\n\n/**\n    esempio di funzionalita ritardata, la sua esecuzione avviene in modalita\n    observer e dopo 3 secondi dalla sua chiamata.\n*/\n\n//dichiarare una funzione come sotto\n@PLDelay(3000)\npublic log(){..}\n\n\n/**\n    per utilizzare la funzione di log, occorre sottoscriversi alla sua esecuzione in\n    una funzioa\n*/\nlog.subscribe(response=>{ ... })Esempi di funzionalità aggiuntive\nil codice viene corredato di funzionalità aggiuntive per String , Array, JSON si riporta un esempio di chiamata\nlet user = {\n    nome:\"Luca\" ,\n    cognome: \"Pic\"\n}\n\nuser=JSON.changeValuesByKey(user,\"cognome\",\"Piciollo\");\nconsole.log(user);\nVerrà stampato l'oggetto - {nome : \"Luca\" , cognome: \"Piciollo\" }\n\n\nLe altre funzionalità vanno utilizzate allo stesso modo\n\nString {\n    format: (...params) => string;\n    isNullOrEmpty: (val: string) => boolean;\n    truncateUrlIfNoParams: (val: any) => string;\n    truncateUrlCache: (val: any) => string;\n}\n\n\n\nArray {\n    moveDown: (from) => void;\n    moveTo: (from, to) => void;\n    moveUp: (from) => void;\n    delete: (position) => void;\n    differences: (items) => Array;\n    inArray: (item) => Number;\n    insert: (index: number, item: any) => void;\n}\n\n\n\nJSON {\n    changeValues: (json,previousValue, nextValue) => any;\n    changeValuesByKey: (json,key, nextValue) => any;\n    findByValue: (json, value) => any;\n    json2flat: (json) => any;\n    json2array: (json) => any;\n    json2flatObj: (json) => any;\n    findKey: (json, keyFind) => any;\n}Esempio mock servizio\nViene mostrato come abilitare il mock di un servizio di BE, utile in caso si voglia simulare la risposta di un servizio ancora in fase di sviluppo\n/**\n    esempio di chiamata http\n*/\n\ncallMock(p1: any, p2: any): Observable {\n    return new Observable(obs => {\n        let plHttpRequest: PlHttpRequest = new PlHttpRequest(\n        environment.http.api.mock ,\n        Object({ api: \"api\", files: \"files\" }),\n        Object({ api: p1, files: p2 }),\n        null);\n\n    this.httpService.GETFILE(plHttpRequest, RESPONSE_TYPE.ARRAYBUFFER, null, null).subscribe(sb => {\n        obs.next(sb);\n        obs.complete()\n    }, error => {\n         obs.error(error);\n     }, () => { })\n  })\n}dichiarare nel file di properties un oggetto cosi dichiarato,\n\napi esposta a scopo illustrativo\n\n/**\n    @author l.piciollo\n    è possibile dichiarare una chiamata ad un mock, si consiglia di rispettare il seguente formato dichiarativo\n    E.S.\n    mock: {\n        url: \"@cacable@/example/:api/:files\",\n        mocked: true,\n        method:\"GET\"\n    }\n    il mock a true, impone al sistema di risalire alla folder                     \n    assets/public/mock/example/no/cache/api/122 e prelevare il\n    json relativo al metodo utilizzato.. quindi post||get||put||delete||patch .json\n*/\n\nmock: {\n    url: \"@cacable@/example/:api/:files\",\n    mocked: true,\n    method:\"GET\"\n}creare una struttura di cartelle per ospitare i file stub. La struttura deve essere posta a partire dal path assets e deve avere cartelle e sottocartelle come il path della url, ovviamente escludendo i queryparams.\n\nper chiamate di tipo GET : assets/public/mock/ example/:api/:file/get.json\n\nper chiamate di tipo POST: assets/public/mock/ example/:api/:file/**post.json\n\n\n\ni path url possono contenere variabili indicate con :nome, il sistema intercetterà automaticamente i path params e sostituira autonomamente questi valori con i valori dei path params passati nella request.\n\n\nEs.\n\nlet plHttpRequest: PlHttpRequest = new PlHttpRequest( environment.http.api.mock , Object({ api: \"api\", files: \"files\" }), Object({ api: p1, files: p2 }), null);le chiamate http necessitano in ingresso dell'oggetto plHttpRequest, il quale contiene la url da richiamare, i query params , del body params e del pathParams. Nell'esempio sopra, si vede che l'oggetto contiene Object({ api: \"api\", files: \"files\" }), le chiavi dell'oggetto devono corrispondere con il nome del path param e il valore, sarà quello che effettivamente sostituirà il nome.\ne cosi per gli altri metodi\n\nè possibile anche mockare servizi con url contenenti path params, ad esempio /example/:id , in questo caso creare comunque l'alberatura sopra citata, escludendo i : nel nome della folder.\n\n\nè possibile cambiare il path di riferimento dei file di mock, ma che comunque siano sempre sotto assets, occorre aggiungere nel modulo di avvio la seguente istruzione\n\n/**\n    inizializzazione del path per reperire gli stub json di risposta al mock\n*/\n\n{ provide: DEFAULT_PATH_MOCK, useValue: \"nuovo/path\" }Alcune funzionalità utili\nE' possibile avvalersi di alcune funzionalità utili come la gestione delle immagini. Si riportano le funzionalità messe a disposizione per la gestione della grafica\n/**\n    si occupa di convertire un immagine esposta tramite blob url, in formato base 64\n    @param imageUrl\n*/\n\npublic image2base64(imageUrl: string): Promise\n\n/**\n    Funzione che esporta l'intero elemento svg in un file per la visualizzazione in un browser,\n    verrà mantenuto fedelmente il costrutto\n    dell'elemento SVG\n    @param elementSVG : elemento svg da elaborare\n    @param nameFIle : nome del file da salvare\n*/\n\npublic svg2File(elementSVG: HTMLElement, nameFIle: string): Observable\n\n/**\n    Funzine per la creazione del jpeg partendo da un dom.\n    l'osservatore ritorna il link all'immagine per il download\n    @param elementSVG elemento SVG dom da cattuare\n*/\n\npublic dom2jpeg(elementSVG: HTMLElement): Observable\n\n/**\n    Funzione per la creazione del canvas, contenente l'immagine del DOM referenziato. non verranno presi in considerazione\n    tag SVG grafici. ma solo html semplice comprese le immagini\n    la funzione restituisce in callback il canvas creato, in modo da poterlo aggiungere al dom o altro.\n    mentre in observer torna la url da passare alla funaione di download\n    @param elementoDom : elemento dom da cattuare\n    @param call : callback di ritorno dove iniettare il canvas creato.\n*/\n\npublic domToCanvas(elementoDom: HTMLElement, call: (canvas: HTMLElement) => void): Observable\n\n\n\n/**\n    Funzione che si occupa di scaricare un'immagine da un contenitore canvas, il canvas deve contenere un immagine non un html.\n    questa funzionalità puo essere usata in risposta a domToCanvas\n    viene ritornata la URL del blob da poeter scaricare\n    @param canvas :oggetto canvas da scaricare\n*/\n\npublic canvasToImg(canvas: HTMLElement): Observable\n\n\n\n/**\n    Funzionalita per la creazione di un immagine a partire da un svg. la funzione restituisce in callback un canvas eventualmente\n    da mostrare a schermo e la url del file in formato blob nell'osservable\n    @param svgElement : svg element del dom\n    @param callBack : funzione di ritorno per la consegna del canvas\n*/\n\npublic svgToImage(svgElement: HTMLElement, call: (canvas) => void): ObservableEsempio message alert()\nIntrodotto un sistema di alert() custom, al momento della chiamata alla funzione alert() di window.. verrà scatenata una routine, che mostrerà una finestra di dialogo modale in formato bootstrap.  La funzionalità è nata per velocizzare la chiamata ad un message .\nshowMessage(){\n    alert(title,message);\n}  come si puo vedere l'utilizzo della funzionalità è molto semplice e immediata.\nE' possibile ritornare alla funzionalità predefinita di window, semplicemente disabilitandola.\n constructor(private alertService: AlertService) {\n     this.alertService.enableAlertMessage(false);\n }Opzioni configurabili\nè possibile procedere alla configurazione personale di alcuni servizi, come ad esempio il tag cache la durata della validità della stessa. Le configurazioni al momento disponibili sono\n\n{ provide: BROWSER_VALID, useValue: [BROWSER.ALL] },\n\n\n{ provide: DISABLE_LOG, useValue: false },\n\n\n{ provide: MAX_CACHE_AGE, useValue: 300000 },\n\n\n{ provide: CACHE_TAG, useValue: \"@cachable@\" },\n\n\n{ provide: DEFAULT_PATH_MOCK, useValue: \"public/mock\" }\n\nIn questa versione\nQuesta versione della lib, contiene tutte le fix effettuate nelle precedenti e in piu, viene migliorata introducendo\n\nIntroduzione messaggio di alert(), ora è possibile effettuare chiamate a window.alert(), e mostrare in automatico una finestra di dialogo con classi bootstrap. E' possibile modificare il suo css per il proprio uso.\n\nTutte le precedenti funzionalità sono rimaste invariate.\nAuthor\nCreated by @l.piciollo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_PlCoreModule\n\n\n\ncluster_PlCoreModule_declarations\n\n\n\ncluster_PlCoreModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nAppModule -->\n\nExampleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nPlCoreModule\n\nPlCoreModule\n\nAppModule -->\n\nPlCoreModule->AppModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nPlCoreModule -->\n\nAlertComponent->PlCoreModule\n\n\n\n\n\nPlProgressComponent\n\nPlProgressComponent\n\nPlCoreModule -->\n\nPlProgressComponent->PlCoreModule\n\n\n\n\n\nPlAmbientModeLoaderService\n\nPlAmbientModeLoaderService\n\nPlCoreModule -->\n\nPlAmbientModeLoaderService->PlCoreModule\n\n\n\n\n\nPlHttpInterceptorMockService\n\nPlHttpInterceptorMockService\n\nPlCoreModule -->\n\nPlHttpInterceptorMockService->PlCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/progressBarsInterface.html":{"url":"interfaces/progressBarsInterface.html","title":"interface - progressBarsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  progressBarsInterface\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/pl-core-utils-library.service.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BROWSER_VALID   (projects/.../pl-ambient-mode.service.ts)\n                        \n                        \n                            CACHE_TAG   (projects/.../pl-cache-map.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            DEFAULT_PATH_MOCK   (projects/.../pl-interceptor-mock.service.ts)\n                        \n                        \n                            DISABLE_LOG   (projects/.../pl-ambient-mode.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            MAX_CACHE_AGE   (projects/.../pl-cache-map.service.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            window   (projects/.../pl-ambient-mode.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/pl-core-utils-library/src/lib/service/pl-ambient-mode.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BROWSER_VALID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken>('browser validi')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLE_LOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken>('disabilita log')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/pl-core-utils-library/src/lib/service/pl-cache-map.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CACHE_TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('tag identificativo per le richieste http')\n                        \n                    \n\n                \n                    \n                        } \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_CACHE_AGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DefaulTimeOut for cache')\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/pl-core-utils-library/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/pl-core-utils-library/src/lib/interceptor/pl-interceptor-mock.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PATH_MOCK\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Defaul path for retrieve mock json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
